{"version":3,"sources":["components/modal/modal-overlay.module.css","components/ingredient/ingredient.module.css","pages/order-feed/orderFeed.module.css","pages/profile/profile.module.css","components/card-order/cardOrder.module.css","components/order-information/orderInformation.module.css","components/app-header/app-header.module.css","components/app-header/app-header.tsx","services/types/hooks.ts","components/product-item/product-item.tsx","components/burger-ingredients/burger-ingredients.tsx","utils/constants.ts","components/modal/modal-overlay.tsx","components/modal/modal.tsx","components/order-details/order-details.tsx","components/product-constructor-item/product-constructor-item.tsx","services/constants/burger-constructor.ts","services/actions/burger-constructor.ts","utils/api.ts","components/burger-constructor/burger-constructor.tsx","components/auth-form/auth-form.tsx","services/constants/login.ts","services/actions/login.ts","pages/sign-in/signin.tsx","services/constants/register.ts","services/actions/register.ts","pages/registration-page/registration.tsx","services/constants/forgot-password.ts","services/actions/forgot-password.ts","pages/forgot-password/forgotPassword.tsx","services/constants/recovery-password.ts","services/actions/recovery-password.ts","pages/recovery-password/recoveryPassword.tsx","services/constants/update-user.ts","services/actions/update-user.ts","components/card-order/cardOrder.tsx","services/constants/wsAction.ts","services/actions/wsAction.ts","pages/profile/profile.tsx","components/protected-route/protected-route.tsx","services/constants/update-token.ts","services/actions/update-token.ts","components/ingredient-details/ingredient-details.tsx","services/constants/app.ts","services/actions/app.ts","components/ingredient/ingredient.tsx","services/constants/burger-ingredients.ts","services/actions/burger-ingredients.ts","components/list-order/listOrder.tsx","components/statusOrder/statusOrder.tsx","pages/order-feed/orderFeedPage.tsx","components/order-information/orderInformation.tsx","components/order-page/order-page.tsx","components/app/app.tsx","services/middleware/socketMiddleware.ts","reportWebVitals.ts","services/reducers/burger-ingredients.ts","services/reducers/app.ts","services/reducers/burger-constructor.ts","services/reducers/forgot-password.ts","services/reducers/recovery-password.ts","services/reducers/register.ts","services/reducers/auth.ts","services/reducers/update-user.ts","services/reducers/update-token.ts","services/constants/order-list.ts","services/reducers/order-list.ts","services/reducers/wsReducer.ts","services/reducers/index.ts","index.tsx","components/burger-constructor/burger-constructor.module.css","components/ingredient-details/ingredient-details.module.css","components/statusOrder/statusOrder.module.css","components/burger-ingredients/burger-ingredients.module.css","components/product-item/product-item.module.css","components/auth-form/auth-form.module.css","components/modal/modal.module.css","components/list-order/listOrder.module.css","components/app/app.module.css","components/order-details/order-details.module.css"],"names":["module","exports","AppHeader","location","useLocation","className","styleHeader","block","container","navigationShop","to","pathname","button_active","button","type","buttonName","logo","activeClassName","useSelector","selectorHook","useDispatch","dispatchHook","ProductItem","item","onOpen","id","ingredientsInBurgerConstructor","state","constructorReducer","useDrag","collect","monitor","opacity","isDragging","dragRef","styleCard","card","style","ref","count","bun","filter","_id","length","other","size","background","image","src","onClick","alt","name","price","BurgerIngredients","openModal","onClose","ingredients","ingredientsReducer","React","useState","current","setCurrent","bunRef","useRef","sauceRef","mainRef","styleIngredients","nav","value","active","scrollIntoView","behavior","mainMenu","onScroll","e","target","scrollTop","offsetTop","map","mainMenu2","baseUrl","modalRoot","document","getElementById","checkResponse","res","ok","json","Promise","reject","status","ModalOverlay","overlayStyle","overlay","Modal","children","escClose","event","key","useEffect","addEventListener","removeEventListener","ReactDOM","createPortal","modalStyle","popup","onKeyDown","close","OrderDetails","createdOrder","styleOrder","number","done","ProductConstructorItem","handleClose","moveListItem","index","isLocked","dragDropRef","drag","useDrop","accept","hover","dragIndex","findIndex","elem","isOver","drop","styleConstructor","text","thumbnail","ADD_INGREDIENT_BURGERCONSTRUCTOR","DELETE_INGREDIENT_BURGERCONSTRUCTOR","CHANGE_ORDER_BURGERCONSTRUCTOR","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","GET_ORDER_FAILED","GET_ORDER_CLOSE","postOrder","token","dispatch","fetch","method","headers","authorization","body","JSON","stringify","then","order","console","log","success","catch","err","BurgerConstructor","setPrice","history","useHistory","sumResult","reduce","cur","isHover","AddIngredientConstructorAction","Refdrop","deleteIngredient","DeleteIngredientConstructorAction","borderColor","moveIngredientsConstructor","func","wait","immediate","timeout","args","context","this","later","apply","callNow","clearTimeout","setTimeout","debounce","useCallback","hoverIndex","ChangeIngredientConstructorAction","login","loginReducer","list","String","undefined","total","sum","sumText","onSubmit","preventDefault","selectedIngredients","push","unshift","localStorage","getItem","splice","replace","AuthForm","submit","title","footerQuestion","link","footerLink","footerMoreQuestion","moreLink","footerMoreLink","styleAuthForm","form","footer","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILED","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILED","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILED","postLogin","email","password","setItem","accessToken","refreshToken","loginData","postLogout","logout","removeItem","logoutData","getUserData","Authorization","getUser","userData","SignIn","setEmail","setPassword","from","placeholder","onChange","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILED","postRegister","register","registerData","RegistrationPage","setName","registerReducer","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAILED","postForgotPassword","forgotPassword","ForgotPassword","forgotPasswordReducer","RECOVERY_PASSWORD_REQUEST","RECOVERY_PASSWORD_SUCCESS","RECOVERY_PASSWORD_FAILED","postRecoveryPassword","resetPassword","recoveryPassword","RecoveryPassword","setToken","recoveryPasswordReducer","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_FAILED","updateUserData","updateUser","updatestatus","CardOrder","currentIngredient","setCurrentIngredient","currentPrice","setCurrentPrice","date","setDate","isStatus","setIsStatus","countIngredients","setCountIngredients","ingredient","i","now","Date","otherDate","parse","createdAt","today","getFullYear","getMonth","getDate","valueOf","dataCard","time","getHours","getMinutes","toString","delta","getTime","Math","floor","url","useRouteMatch","statusOrder","setStatusOrder","slice","styleCardOrder","header","cardName","color","icons","icon","lastPick","pick","priceValue","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","WS_SEND_MESSAGE","WS_CONNECTION_START_PROFILE","wsConnectionStartAction","wsConnectionClosedAction","Profile","updateUserReducer","inputChange","setInputChange","user","messages","wsReducer","isOrder","setIsOrder","orders","reverse","styleProfile","main","navList","list_active","matches","cookie","match","RegExp","decodeURIComponent","getCookie","inputs","info","buttons_active","buttons","orderListInfo","ProtectedRoute","rest","render","UPDATE_TOKEN_REQUEST","UPDATE_TOKEN_SUCCESS","UPDATE_TOKEN_FAILED","postUpdateToken","updateTokenData","IngredientDetails","modal","appReducer","useParams","styleIngredient","description","img","image_large","stat","calories","proteins","fat","carbohydrates","ADD_MODAL_DATA","DELETE_MODAL_DATA","ADD_MODAL_PROFILE","AddModalDataAction","AddModalProfileAction","Ingredient","currentIngredientId","setCurrentIngredientId","find","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","GetIngredientsFailedAction","getItems","data","ListOrder","styleListOrder","StatusOrder","styleStatusOrder","readiness","statusBlock","statusList","idReady","idWork","totalToday","OrderFeed","styleOrderFeed","OrderInformation","currentOrder","uniqueIngredient","Array","Set","styleOrderInformation","orderList","repeat","resultPrice","OrderPage","currentProfileOrderId","setCurrentProfileOrderId","currentProfileOrderItem","setCurrentProfileOrderItem","styleOrderPage","App","wsUrl","wsActions","isIngredientModalOpen","setIsIngredientModalOpen","isOrderModalOpen","setIsOrderModalOpen","isProfileOrderModalOpen","setProfileIsOrderModalOpen","currentIngredientItem","setCurrentIngredientItem","openModalProfileOrder","closeIngredientModal","goBack","closeModal","updateTokenSuccess","updateTokenReducer","userFailed","checkUser","styleApp","page","path","exact","menu","DndProvider","backend","HTML5Backend","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","ingredientsRequest","ingredientsFailed","orderRequest","orderFailed","forgotPasswordRequest","forgotPasswordFailed","recoveryPasswordRequest","recoveryPasswordFailed","registerRequest","registerFailed","loginRequest","loginFailed","logoutRequest","logoutFailed","userRequest","updateUserRequest","updateUserFailed","updateTokenRequest","updateTokenFailed","GET_ORDERLIST_REQUEST","GET_ORDERLIST_SUCCESS","GET_ORDERLIST_FAILED","orderListRequest","orderListFailed","wsConnected","rootReducer","combineReducers","action","deleteElement","update","$splice","newArrayConstructor","orderListReducer","error","payload","wsInit","wsInitProfile","onError","onMessage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","enhancer","applyMiddleware","thunk","store","socket","next","WebSocket","onopen","onerror","onmessage","parsedData","restParsedData","onclose","createStore","StrictMode"],"mappings":"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","file":"static/js/main.23840d92.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__jpPIU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ingredient_container__31gjh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"orderFeed_block__1kXAE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profile_container__2BbXp\",\"main\":\"profile_main__qGy5r\",\"nav\":\"profile_nav__1ddV4\",\"navList\":\"profile_navList__2P6zY\",\"list\":\"profile_list__2lI8E\",\"list_active\":\"profile_list_active__kvN4j\",\"link\":\"profile_link__1-1p8\",\"info\":\"profile_info__1RTkK\",\"footer\":\"profile_footer__dPUqU\",\"orders\":\"profile_orders__c8-sy\",\"buttons\":\"profile_buttons__1vzW7\",\"buttons_active\":\"profile_buttons_active__1jOEG\",\"orderListInfo\":\"profile_orderListInfo__1BBG4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cardOrder_container__UjN-B\",\"id\":\"cardOrder_id__2kL18\",\"cardName\":\"cardOrder_cardName__3SuIQ\",\"header\":\"cardOrder_header__G4Rbk\",\"date\":\"cardOrder_date__cUm5f\",\"footer\":\"cardOrder_footer__37t7r\",\"icons\":\"cardOrder_icons__npQ9C\",\"icon\":\"cardOrder_icon__1Xn2l\",\"pick\":\"cardOrder_pick__piW_2\",\"lastPick\":\"cardOrder_lastPick__1S6_A\",\"price\":\"cardOrder_price__1xXaP\",\"status\":\"cardOrder_status__1YPwR\",\"link\":\"cardOrder_link__2niJ9\",\"count\":\"cardOrder_count__2nsey\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"orderInformation_container__3HiG_\",\"id\":\"orderInformation_id__38XXk\",\"status\":\"orderInformation_status__1vHEl\",\"orderList\":\"orderInformation_orderList__1AT88\",\"list\":\"orderInformation_list__TNCb4\",\"ingredient\":\"orderInformation_ingredient__7_6_p\",\"icon\":\"orderInformation_icon__3TVX3\",\"img\":\"orderInformation_img__Ue1iB\",\"name\":\"orderInformation_name__2l0hA\",\"price\":\"orderInformation_price__2BDqY\",\"priceValue\":\"orderInformation_priceValue__345Ag\",\"footer\":\"orderInformation_footer__2s5UX\",\"date\":\"orderInformation_date__1Aj2q\",\"resultPrice\":\"orderInformation_resultPrice__11W5v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"app-header_block__2OXB7\",\"button\":\"app-header_button__1tHq1\",\"button_active\":\"app-header_button_active__N4rAI\",\"link\":\"app-header_link__2y8TU\",\"buttonName\":\"app-header_buttonName__1ex0G\",\"logo\":\"app-header_logo__zVEfY\",\"navigationShop\":\"app-header_navigationShop__pveBR\",\"container\":\"app-header_container__2ER_-\"};","import styleHeader from \"../app-header/app-header.module.css\";\nimport { Logo } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport {\n  BurgerIcon,\n  ListIcon,\n  ProfileIcon,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction AppHeader() {\n  let location = useLocation();\n\n  return (\n    <header className={styleHeader.block}>\n      <div className={styleHeader.container}>\n        <div className={styleHeader.navigationShop}>\n          <Link\n            to={{ pathname: \"/\" }}\n            className={\n              location.pathname === \"/\"\n                ? styleHeader.button_active\n                : styleHeader.button\n            }\n          >\n            <BurgerIcon\n              type={location.pathname === \"/\" ? \"primary\" : \"secondary\"}\n            />\n            <p\n              className={`${styleHeader.buttonName} text text_type_main-default ml-2`}\n            >\n              Контруктор\n            </p>\n          </Link>\n\n         \n            <Link\n            to={{pathname:'/feed'}}\n            className={\n              location.pathname === '/feed'\n              ? styleHeader.button_active\n              : styleHeader.button\n            }\n            >\n            <ListIcon type={location.pathname === \"/feed\" ? \"primary\" : \"secondary\"} />\n            <p\n              className={`${styleHeader.buttonName} text text_type_main-default ml-2`}\n            >\n              Лента заказов\n            </p>\n            </Link>\n        </div>\n\n        <div className={styleHeader.logo}>\n          \n          <Link\n            to={{ pathname: \"/\" }}\n          >\n            <Logo />\n          </Link>\n        </div>\n\n        <NavLink\n          to={{ pathname: \"/profile\" }}\n          className={styleHeader.button}\n          activeClassName={styleHeader.button_active}\n        >\n          <ProfileIcon\n            type={\n              location.pathname === \"/profile\" ||\n              location.pathname === \"/profile/orders\"\n                ? \"primary\"\n                : \"secondary\"\n            }\n          />\n          <p\n            className={`${styleHeader.buttonName} text text_type_main-default ml-2`}\n          >\n            Личный кабинет\n          </p>\n        </NavLink>\n      </div>\n    </header>\n  );\n}\n\nexport default AppHeader;\n","import {TypedUseSelectorHook, useSelector as selectorHook, useDispatch as dispatchHook} from 'react-redux';\nimport { RootState, AppDispatch, AppThunk } from './';\n// Теперь этот хук «знает» структуру хранилища\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook; \n// Хук не даст отправить экшен, который ему не знаком\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>(); ","import styleCard from \"../product-item/product-item.module.css\";\nimport {\n  CurrencyIcon,\n  Counter,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { useDrag } from \"react-dnd\";\nimport { useSelector } from \"../../services/types/hooks\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { FunctionComponent } from 'react';\n\ninterface IProductItem {\n  item: { \n    type?: string;\n    _id: string;\n    image: string;\n    name: string;\n    price: number;\n  };\n  onOpen: (item?: object) => void;\n  id: string;\n  onClose?: () => void;\n  card?: {}\n}\n\nconst ProductItem: FunctionComponent<IProductItem> = ({ item, onOpen, id }) => {\n  const { ingredientsInBurgerConstructor } = useSelector(state => state.constructorReducer\n  );\n\n  function handleClick() {\n    onOpen(item);\n  }\n\n  const [{ opacity }, dragRef] = useDrag({\n    //добавляю ф-ть перетаскивания\n    type: \"items\", //Это строка, благодаря которой целевой элемент понимает, какие элементы в него можно перетащить\n    item: item, //Это данные о перетаскиваемом элементе.\n    collect: (monitor) => ({\n      opacity: monitor.isDragging() ? 0.5 : 1,\n    }),\n  });\n\n  const count = () => { \n    if (item.type === \"bun\") {\n      return ingredientsInBurgerConstructor.bun.filter(\n        (item: { _id?: string }) => item._id === id\n      ).length !== 0\n        ? ingredientsInBurgerConstructor.bun.filter((item: { _id?: string }) => item._id === id)\n            .length + 1\n        : 0;\n    } else {\n      return ingredientsInBurgerConstructor.other.filter(\n        (item: { _id?: string }) => item._id === id\n      ).length;\n    }\n  };\n\n  const location = useLocation(); \n\n  return (\n    <section\n      className={`${styleCard.card} ml-4 mb-10`}\n      style={{ opacity }}\n      ref={dragRef}\n    >\n      <div className={styleCard.count}>\n        <Counter count={count()} size=\"default\" />\n      </div>\n      <Link\n        to={{\n          pathname: `/ingredients/${item._id}`,\n          state: { background: location },\n        }}\n      >\n        <img\n          className={`${styleCard.image} mb-1 ml-4 mr-4`} //product-item_image__308nZ mb-1 ml-4 mr-4\n          src={item.image}\n          onClick={handleClick}\n          alt={item.name}\n        />\n      </Link>\n      <div className={`${styleCard.price} mb-1`}>\n        <p className=\"text text_type_digits-default mr-2\">{item.price}</p>\n        <CurrencyIcon type=\"primary\" />\n      </div>\n      <p className={`${styleCard.name} text text_type_main-default`}>\n        {item.name}\n      </p>\n    </section>\n  );\n}\n\nexport default ProductItem;","import React, { useRef } from \"react\";\nimport styleIngredients from \"../burger-ingredients/burger-ingredients.module.css\";\nimport { Tab } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport ProductItem from \"../product-item/product-item\";\nimport { useSelector } from \"../../services/types/hooks\";\nimport { FC } from 'react';\n\ninterface IBurgerIngredients {\n  openModal: () => void;\n  onClose: () => void;\n}\n\ntype TItem = { \n    type?: string;\n    _id: string;\n    image: string;\n    name: string;\n    price: number;\n}\n\nconst BurgerIngredients: FC<IBurgerIngredients> = ({openModal, onClose}) => {\n\n  //данные ингредиентов из хранилища\n  const { ingredients } = useSelector(state => state.ingredientsReducer);\n  \n  const [current, setCurrent] = React.useState<string>(\"bun\");\n  \n  const bunRef = useRef<HTMLDivElement>(null);\n  const sauceRef = useRef<HTMLDivElement>(null);\n  const mainRef = useRef<HTMLDivElement>(null);\n\n  const handleScroll = (e: React.UIEvent<HTMLDivElement>): void => {\n    if(bunRef.current) {\n      if ((e.target as HTMLDivElement).scrollTop >= bunRef.current.offsetTop / 2) {\n        setCurrent(\"bun\");\n      }\n    }\n    if(sauceRef.current) {\n      if ((e.target as HTMLDivElement).scrollTop >= sauceRef.current.offsetTop / 2) {\n        setCurrent(\"sauces\");\n      }\n    }\n    if(mainRef.current) {\n      if ((e.target as HTMLDivElement).scrollTop >= mainRef.current.offsetTop / 2) {\n        setCurrent(\"main\");\n      }\n    }\n  };\n\n  const hanldeScrollTab = () => {\n    if(bunRef.current) {\n      setCurrent(\"bun\");\n      bunRef.current.scrollIntoView({behavior: \"smooth\"})\n    }\n  }\n\n  const hanldeScrollSauce = () => {\n    if(sauceRef.current) {\n      setCurrent(\"sauces\");\n      sauceRef.current.scrollIntoView({behavior: \"smooth\"})\n    }\n  }\n\n  const hanldeScrollMain = () => {\n    if(mainRef.current) {\n      setCurrent(\"main\");\n      mainRef.current.scrollIntoView({behavior: \"smooth\"})\n    }\n  }\n\n  return (\n    <section className={styleIngredients.block}>\n      <h2 className=\"text text_type_main-large mb-5 mt-10\">\n        {\"Соберите бургер\"}\n      </h2>\n      <nav\n        className={`${styleIngredients.nav} text text_type_main-default mb-10`}\n      >\n        <Tab value=\"bun\" active={current === \"bun\"} onClick={hanldeScrollTab}>\n          Булки\n        </Tab>\n        <Tab value=\"sauces\" active={current === \"sauces\"} onClick={hanldeScrollSauce}>\n          Соусы\n        </Tab>\n        <Tab value=\"main\" active={current === \"main\"} onClick={hanldeScrollMain}>\n          Начинки\n        </Tab>\n      </nav>\n\n      <section className={styleIngredients.mainMenu} onScroll={handleScroll}>\n        <div ref={bunRef}>\n          <h2 className=\"text text_type_main-medium mb-6\">Булки</h2>\n          <ul className={styleIngredients.item}>\n            {ingredients.map((item: TItem) => {\n              if (item.type === \"bun\") {\n                return (\n                  <ProductItem\n                    item={item}\n                    key={item._id}\n                    onOpen={openModal}\n                    onClose={onClose}\n                    id={item._id}\n                  />\n                );\n              }\n            })}\n          </ul>\n        </div>\n\n        <div className={styleIngredients.mainMenu2} ref={sauceRef}>\n          <h2 className=\"text text_type_main-medium mb-6\">{\"Соусы\"}</h2>\n          <ul className={styleIngredients.item}>\n            {ingredients.map((item: TItem) => {\n              if (item.type === \"sauce\") {\n                return (\n                  <ProductItem\n                    card={item}\n                    key={item._id}\n                    onOpen={openModal}\n                    id={item._id}\n                    item={item}\n                  />\n                );\n              }\n            })}\n          </ul>\n        </div>\n\n        <div ref={mainRef}>\n          <h2 className=\"text text_type_main-medium mb-6\">{\"Начинки\"}</h2>\n          <ul className={styleIngredients.item}>\n            {ingredients.map((item: TItem) => {\n              if (item.type === \"main\") {\n                return (\n                  <ProductItem\n                    card={item}\n                    key={item._id}\n                    onOpen={openModal}\n                    id={item._id}\n                    item={item}\n                  />\n                );\n              }\n            })}\n          </ul>\n        </div>\n      </section>\n    </section>\n  );\n}\n\nexport default BurgerIngredients;\n","const baseUrl = 'https://norma.nomoreparties.space/api';\nconst modalRoot = document.getElementById(\"modals\")!;\n\nfunction setCookie(name: string, value: string, props: any) {\n  props = props || {};\n  let exp = props.expires;\n  if (typeof exp == \"number\" && exp) {\n    const d = new Date();\n    d.setTime(d.getTime() + exp * 1000);\n    exp = props.expires = d;\n  }\n  if (exp && exp.toUTCString) {\n    props.expires = exp.toUTCString();\n  }\n  value = encodeURIComponent(value);\n  let updatedCookie = name + \"=\" + value;\n  for (const propName in props) {\n    updatedCookie += \"; \" + propName;\n    const propValue = props[propName];\n    if (propValue !== true) {\n      updatedCookie += \"=\" + propValue;\n    }\n  }\n  document.cookie = updatedCookie;\n}\n\nfunction getCookie(name: string) {\n  const matches = document.cookie.match(\n    new RegExp(\n      \"(?:^|; )\" +\n        name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, \"\\\\$1\") +\n        \"=([^;]*)\"\n    )\n  );\n  return matches ? decodeURIComponent(matches[1]) : undefined;\n}\n\nfunction checkResponse(res: Response) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n}\n\nexport { modalRoot, setCookie, getCookie, baseUrl, checkResponse };\n","import React from \"react\";\nimport overlayStyle from \"./modal-overlay.module.css\";\nimport { FC } from 'react';\n\ninterface IModalOverlay {\n  onOpen: boolean;\n  onClose: () => void;\n}\n\nconst ModalOverlay: FC<IModalOverlay> = ({onOpen, onClose}) => {\n  if (!onOpen) return null;\n  return (\n    <div className={overlayStyle.overlay} onClick={onClose}></div>\n  )\n}\n\nexport default ModalOverlay;\n","import React from \"react\";\nimport modalStyle from \"./modal.module.css\";\nimport { CloseIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport ReactDOM from \"react-dom\";\nimport { modalRoot } from \"../../utils/constants\";\nimport ModalOverlay from \"./modal-overlay\";\nimport { FC } from 'react';\n\ninterface IModal {\n  onClose: (OnClose?: () => void) => void;\n  onOpen: boolean;\n}\n\nconst Modal: FC<IModal> = ({ onClose, onOpen, children }) => {\n\n  function escClose(event: KeyboardEvent | React.KeyboardEvent): void {\n    if (event.key === 'Escape') {\n      onClose(onClose)\n    }\n  }\n\n  React.useEffect(() => {\n    document.addEventListener(\"keydown\", escClose);\n    return () => {\n       document.removeEventListener(\"keydown\", escClose);\n    };\n  }, []);\n\n  if (!onOpen) return null;\n  return ReactDOM.createPortal(\n    <>\n    <ModalOverlay\n    onClose={onClose}\n    onOpen={onOpen}\n  />\n    <div className={modalStyle.popup} onKeyDown={escClose}>\n      <div className={`${modalStyle.container}`}>\n        <div className={modalStyle.close}>\n          <CloseIcon type=\"primary\" onClick={onClose} />\n        </div>\n      </div>\n      {children}\n    </div>\n    </>,\n    modalRoot\n  );\n}\n\nexport default Modal;\n","import React from \"react\";\nimport styleOrder from \"../order-details/order-details.module.css\";\nimport { useSelector } from \"../../services/types/hooks\";\nimport { FC } from 'react';\n\nconst OrderDetails: FC = () => {\n  const { createdOrder } = useSelector(state => state.constructorReducer);\n\n  return (\n    <div className={styleOrder.container}>\n      <p className=\"text text_type_digits-large mt-30 mb-8\" id=\"orderNumber\">\n        {createdOrder.number ? createdOrder.number : \"Load...\"}\n      </p>\n      <p className=\"text text_type_main-medium mb-15\">идентификатор заказа</p>\n      <div className={`${styleOrder.done} mb-15`}></div>\n      <p className=\"text text_type_main-default mb-2\">\n        Ваш заказ начали готовить\n      </p>\n      <p className={\"text text_type_main-default text_color_inactive mb-30\"}>\n        Дождитесь готовности на орбитальной станции\n      </p>\n    </div>\n  );\n}\n\nexport default OrderDetails;\n","import { useDrag } from \"react-dnd\";\nimport { useDrop } from \"react-dnd\";\nimport { useSelector } from \"../../services/types/hooks\";\nimport { useRef } from \"react\";\nimport styleConstructor from \"../burger-constructor/burger-constructor.module.css\";\nimport { ConstructorElement } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { DragIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { FC } from 'react';\n\ninterface IProductConstructorItem {\n  handleClose: () => void | undefined;\n  moveListItem?: (dragIndex?: number, hoverIndex?: number) => void;\n  index?: number | undefined;\n  item: {\n    type: string;\n    _id?: string;\n    image: string;\n    name: string;\n    price: number;\n  }\n  type: \"top\" | \"bottom\" | undefined;\n  isLocked?: boolean;\n  key?: string\n}\n\nconst ProductConstructorItem: FC<IProductConstructorItem> = ({\n  handleClose, \n  moveListItem, \n  index, \n  item, \n  type, \n  isLocked, \n}) => {\n  const { ingredientsInBurgerConstructor } = useSelector(state => state.constructorReducer\n  );\n  const dragDropRef = useRef<HTMLLIElement>(null);\n\n  const [, drag] = useDrag({\n    //добавляю ф-ть перетаскивания\n    type: \"item\", //Это строка, благодаря которой целевой элемент понимает, какие элементы в него можно перетащить\n    item: item, //Это данные о перетаскиваемом элементе.\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const [{ opacity }, drop] = useDrop({\n    accept: \"item\",\n    hover: (item: {_id: string}) => {\n      const dragIndex = ingredientsInBurgerConstructor.other.findIndex(\n        (elem:{_id: string}) => elem._id === item._id\n      );\n      const hoverIndex = index;\n      moveListItem!(dragIndex, hoverIndex);\n    },\n    collect: (monitor) => ({\n      opacity: monitor.isOver() ? 0.2 : 1,\n    }),\n  });\n\n  drag(drop(dragDropRef));\n\n  return item.type === \"bun\" ? (\n    <li className={styleConstructor.bun} style={{ opacity }}>\n      <ConstructorElement\n        text={\n          type === \"top\"\n            ? `${item.name} (верх)`\n            : type === \"bottom\"\n            ? `${item.name} (низ)`\n            : item.name\n        }\n        price={item.price}\n        thumbnail={item.image}\n        handleClose={handleClose}\n        type={type}\n        isLocked={isLocked}\n      />\n    </li>\n  ) : (\n    <li className={styleConstructor.item} style={{ opacity }} ref={dragDropRef}>\n      <DragIcon type=\"secondary\" />\n      <ConstructorElement\n        text={item.name}\n        price={item.price}\n        thumbnail={item.image}\n        handleClose={handleClose}\n        type={type}\n        isLocked={isLocked}\n      />\n    </li>\n  );\n}\n\nexport default ProductConstructorItem;\n","export const ADD_INGREDIENT_BURGERCONSTRUCTOR: \"ADD_INGREDIENT_BURGERCONSTRUCTOR\" =\n  \"ADD_INGREDIENT_BURGERCONSTRUCTOR\";\nexport const DELETE_INGREDIENT_BURGERCONSTRUCTOR: \"DELETE_INGREDIENT_BURGERCONSTRUCTOR\" =\n  \"DELETE_INGREDIENT_BURGERCONSTRUCTOR\";\nexport const CHANGE_ORDER_BURGERCONSTRUCTOR: \"CHANGE_ORDER_BURGERCONSTRUCTOR\" = \"CHANGE_ORDER_BURGERCONSTRUCTOR\";\nexport const GET_ORDER_REQUEST: \"GET_ORDER_REQUEST\" = \"GET_ORDER_REQUEST\";\nexport const GET_ORDER_SUCCESS: \"GET_ORDER_SUCCESS\" = \"GET_ORDER_SUCCESS\";\nexport const GET_ORDER_FAILED: \"GET_ORDER_FAILED\" = \"GET_ORDER_FAILED\";\nexport const GET_ORDER_CLOSE: \"GET_ORDER_CLOSE\" = \"GET_ORDER_CLOSE\";","import { order } from \"../../utils/api\"; //вызов данных из апи\n\nimport {ADD_INGREDIENT_BURGERCONSTRUCTOR, DELETE_INGREDIENT_BURGERCONSTRUCTOR,\n  CHANGE_ORDER_BURGERCONSTRUCTOR, GET_ORDER_REQUEST, GET_ORDER_SUCCESS, GET_ORDER_FAILED, GET_ORDER_CLOSE}\n  from '../constants/burger-constructor';\n\nimport { AppDispatch, AppThunk } from '../types';\nimport {TIngredient, TOrder} from '../types/data';\n\nexport interface IAddIngredientConstructor {\n  readonly type: typeof ADD_INGREDIENT_BURGERCONSTRUCTOR;\n  readonly item: TIngredient\n}\n\nexport interface IDeleteIngredientConstructor {\n  readonly type: typeof DELETE_INGREDIENT_BURGERCONSTRUCTOR;\n  readonly id: string;\n}\n\nexport interface IChangeIngredientConstructor {\n  readonly type: typeof CHANGE_ORDER_BURGERCONSTRUCTOR;\n  readonly item: ReadonlyArray<TIngredient>;\n  readonly dragIndex: number;\n  readonly hoverIndex: number;\n}\n\nexport interface IGetOrderRequest {\n  readonly type: typeof GET_ORDER_REQUEST;\n}\n\nexport interface IGetOrderSuccess {\n  readonly type: typeof GET_ORDER_SUCCESS;\n  readonly createdOrder: TOrder;\n}\n\nexport interface IGetOrderFailed {\n  readonly type: typeof GET_ORDER_FAILED;\n}\n\nexport interface IGetOrderClose{\n  readonly type: typeof GET_ORDER_CLOSE;\n}\n\nexport type TBurgerConstructorActions =\n| IAddIngredientConstructor\n| IDeleteIngredientConstructor\n| IChangeIngredientConstructor\n| IGetOrderRequest\n| IGetOrderSuccess\n|IGetOrderFailed\n| IGetOrderClose;\n\nexport const AddIngredientConstructorAction = (item: TIngredient): IAddIngredientConstructor => ({\n  type: ADD_INGREDIENT_BURGERCONSTRUCTOR,\n  item\n});\n\nexport const DeleteIngredientConstructorAction = (id: string): IDeleteIngredientConstructor => ({\n  type: DELETE_INGREDIENT_BURGERCONSTRUCTOR,\n  id\n});\n\nexport const ChangeIngredientConstructorAction = (item: ReadonlyArray<TIngredient>, dragIndex: number, hoverIndex: number): IChangeIngredientConstructor => ({\n  type: CHANGE_ORDER_BURGERCONSTRUCTOR,\n  item,\n  dragIndex,\n  hoverIndex\n});\n\nexport const GetOrderRequestAction = (): IGetOrderRequest => ({\n  type: GET_ORDER_REQUEST\n});\n\nexport const GetOrderSuccessAction = (createdOrder: {number: number;}): IGetOrderSuccess => ({\n  type: GET_ORDER_SUCCESS,\n  createdOrder\n});\n\nexport const GetOrderFailedAction = (): IGetOrderFailed => ({\n  type: GET_ORDER_FAILED\n});\n\nexport const GetOrderCloseAction = (): IGetOrderClose => ({\n  type: GET_ORDER_CLOSE\n});\n\n\nexport const postOrder: AppThunk = (id: string, token: string) => {\n  return function (dispatch: AppDispatch) {\n    dispatch(GetOrderRequestAction());\n    order(id, token)\n      .then((res) => {\n        console.log(res)\n        if (res.success) {\n          dispatch(GetOrderSuccessAction(res.order));\n        } else {\n          dispatch(GetOrderFailedAction());\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n} \n","import { baseUrl, checkResponse } from \"./constants\";\n\nconst getIngredients = () => {\n  return fetch(`${baseUrl}/ingredients`).then(checkResponse)\n};\n\nconst order = (id: string, token: string) => {\n  return fetch(`${baseUrl}/orders`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: token,\n    },\n    body: JSON.stringify({\n      ingredients: id,\n    }),\n  }).then(checkResponse)\n};\n\nconst forgotPassword = (email: string) => {\n  return fetch(baseUrl + '/password-reset', {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      email: email,\n    }),\n  }).then(checkResponse)\n};\n\nconst resetPassword = (password: string, token: string) => {\n  return fetch(baseUrl + \"/password-reset/reset\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      password: password,\n      token: token,\n    }),\n  }).then(checkResponse)\n};\n\nconst register = (email: string, password: string, name: string) => {\n  return fetch(baseUrl + \"/auth/register\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password,\n      name: name,\n    }),\n  }).then(checkResponse)\n};\n\nconst login = (email: string, password: string) => {\n  return fetch(baseUrl + \"/auth/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password,\n    }),\n  }).then(checkResponse)\n};\n\nconst updateToken = (refreshToken: string) => {\n  return fetch(baseUrl + \"/auth/token\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      token: refreshToken,\n    }),\n  }).then((res) => {\n    return res.json();\n  });\n};\n\nconst logout = (token: string) => {\n  return fetch(baseUrl + \"/auth/logout\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      token: token,\n    }),\n  }).then(checkResponse) \n};\n\nconst getUser = (token: string) => {\n  return fetch(baseUrl + \"/auth/user\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token,\n    },\n  }).then((res) => {\n    return res.json();\n  });\n};\n\nconst updateUser = (token: string, email: string, password: string, name: string) => {\n  return fetch(baseUrl + \"/auth/user\", {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: token,\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password,\n      name: name,\n    }),\n  }).then((res) => {\n    return res.json();\n  });\n};\n\nexport {\n  getIngredients,\n  order,\n  forgotPassword,\n  resetPassword,\n  register,\n  login,\n  updateToken,\n  logout,\n  getUser,\n  updateUser,\n};\n","import styleConstructor from \"../burger-constructor/burger-constructor.module.css\";\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { Button } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport React, { useEffect, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"../modal/modal\";\nimport OrderDetails from \"../order-details/order-details\";\nimport { useDispatch, useSelector } from \"../../services/types/hooks\";\nimport ProductConstructorItem from \"../product-constructor-item/product-constructor-item\";\nimport { useDrop } from \"react-dnd\";\nimport { AddIngredientConstructorAction, ChangeIngredientConstructorAction, DeleteIngredientConstructorAction, postOrder } from \"../../services/actions/burger-constructor\";\nimport { useHistory } from \"react-router-dom\";\nimport { FC } from 'react';\nimport {TIngredient} from '../../services/types/data';\nimport {GetOrderCloseAction} from '../../services/actions/burger-constructor';\n\ninterface IBurgerConstructor {\n  openModal: () => void;  \n  onClose: () => void;\n  onOpen: boolean;\n}\n\ntype TItem = { \n  type: string;\n  _id?: string;\n  image: string;\n  name: string;\n  price: number;\n}\n\nconst BurgerConstructor: FC<IBurgerConstructor> =({openModal, onClose, onOpen}) => {\n  const [price, setPrice] = React.useState<number>(0);\n\n  //список ингредиентов для конструктора бургера\n  const { ingredientsInBurgerConstructor } = useSelector(state => state.constructorReducer);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    const sumResult = ingredientsInBurgerConstructor.other.reduce(\n      (cur: number, item:{price: number}) => {\n        return item.price + cur;\n      },\n      0\n    );\n    setPrice(\n      (ingredientsInBurgerConstructor.bun[0]\n        ? ingredientsInBurgerConstructor.bun[0].price * 2\n        : 0) + sumResult\n    );\n  }, [ingredientsInBurgerConstructor]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>): void =>  {\n    e.preventDefault();\n    if (login) {\n      \n        if(ingredientsInBurgerConstructor.other.length !== 0 && ingredientsInBurgerConstructor.bun.length !== 0) {\n          let selectedIngredients = ingredientsInBurgerConstructor.other.map(\n            (item: {_id: string}) => {\n              return item._id;\n            }\n          );\n          selectedIngredients.push(ingredientsInBurgerConstructor.bun[0]._id);\n          selectedIngredients.unshift(ingredientsInBurgerConstructor.bun[0]._id);\n          dispatch(postOrder(selectedIngredients, localStorage.getItem(\"access\")));\n          console.log(selectedIngredients)\n          dispatch(GetOrderCloseAction())\n          ingredientsInBurgerConstructor.other.splice(0,)\n          ingredientsInBurgerConstructor.bun.splice(0,)\n        }\n        else {\n          history.replace({ pathname: \"/\" });\n        }\n    } else {\n      history.replace({ pathname: \"/login\" });\n    }\n  }\n\n  const [{ isHover }, Refdrop] = useDrop({\n    accept: \"items\",\n    collect: (monitor) => ({\n      isHover: monitor.isOver(), \n    }),\n    drop(item: TIngredient) {\n      dispatch(AddIngredientConstructorAction(item)); \n    },\n  });\n\n  const deleteIngredient = (id: string) => {\n    dispatch(DeleteIngredientConstructorAction(id));\n  };\n\n  const borderColor = isHover ? \"lightgreen\" : \"transparent\";\n\n  function debounce(func: () => void, wait?:number, immediate?: string) { \n    let timeout: any;\n\n    return function executedFunction(this:any, ...args: []) {\n      const context = this;\n\n      const later = function () {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n\n      const callNow = immediate && !timeout;\n\n      clearTimeout(timeout);\n\n      timeout = setTimeout(later, wait);\n\n      if (callNow) func.apply(context, args);\n    };\n  }\n\n  const moveIngredientsItem: (dragIndex?: number, hoverIndex?: number) => void  = useCallback(\n    (dragIndex, hoverIndex) => {\n      dispatch(ChangeIngredientConstructorAction(ingredientsInBurgerConstructor.other, dragIndex!, hoverIndex!))\n    },\n    [ingredientsInBurgerConstructor.other, dispatch]\n  );\n\n  const moveIngredientsConstructor = debounce(moveIngredientsItem);\n\n  const { login } = useSelector(state => state.loginReducer);\n\n  return (\n    <section className={`${styleConstructor.block} mt-25`}>\n      <ul\n        className={`${styleConstructor.list}`}\n        style={{ borderColor }}\n        ref={Refdrop}\n        id=\"orderPlace\"\n      >\n        {ingredientsInBurgerConstructor.bun.map((item: TItem, index: number) => {\n          return (\n            <ProductConstructorItem\n              key={String(item._id) + index}\n              handleClose={() => {\n                deleteIngredient(String(item._id) + index);\n              }}\n              type=\"top\"\n              isLocked\n              item={item}\n            />\n          );\n        })}\n\n        <div className={styleConstructor.container}>\n          {ingredientsInBurgerConstructor.other.map((item: TItem, index: number) => {\n            return (\n              <ProductConstructorItem\n                key={String(item._id) + index}\n                handleClose={() => {\n                  deleteIngredient(String(item._id) + index);\n                }}\n                index={index}\n                moveListItem={moveIngredientsConstructor}\n                item={item}\n                type={undefined}\n              />\n            );\n          })}\n        </div>\n\n        {ingredientsInBurgerConstructor.bun.map((item: TItem, index: number) => {\n          return (\n            <ProductConstructorItem\n              key={String(item._id) + index}\n              handleClose={() => {\n                deleteIngredient(String(item._id) + index);\n              }}\n              type=\"bottom\"\n              isLocked\n              item={item}\n            />\n          );\n        })}\n      </ul>\n\n      <div className={`${styleConstructor.total} mt-10`}>\n        <div className={`${styleConstructor.sum} mr-10`}>\n          <p\n            className={`${styleConstructor.sumText} mr-2 text text_type_digits-medium`}\n          >\n            {price ? price : 0}\n          </p>\n          <CurrencyIcon type=\"primary\" />\n        </div>\n        <form onSubmit={handleSubmit}>\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            onClick={login && ingredientsInBurgerConstructor.other.length !== 0 && ingredientsInBurgerConstructor.bun.length !== 0 ? openModal : undefined}\n          >\n            Оформить заказ\n          </Button>\n        </form>\n      </div>\n      {\n        <Modal onClose={onClose} onOpen={onOpen}>\n          <OrderDetails />\n        </Modal>\n      }\n    </section>\n  );\n}\n\nBurgerConstructor.propTypes = {\n  openModal: PropTypes.func.isRequired,\n  onOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default BurgerConstructor;\n","import styleAuthForm from \"./auth-form.module.css\";\nimport { Button } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { Link } from \"react-router-dom\";\nimport React, { FC } from 'react';\n\ninterface IAuthForm {\n  submit: (e: React.FormEvent<HTMLFormElement>) => void;\n  title: string;\n  children?: {};\n  buttonName?: string;\n  footerQuestion?: string;\n  link?: string;\n  footerLink?: string;\n  footerMoreQuestion?: string;\n  moreLink?: string;\n  footerMoreLink?: string;\n}\n\nconst AuthForm: FC<IAuthForm> = ({\n  submit,\n  title,\n  children,\n  buttonName,\n  footerQuestion,\n  link, footerLink,\n  footerMoreQuestion,\n  moreLink,\n  footerMoreLink\n}) => {\n  return (\n    <section className={styleAuthForm.container}>\n      <form className={styleAuthForm.form} onSubmit={submit}> \n        <h2 className=\"text text_type_main-medium mb-6\">{title}</h2>\n        {children}\n        <Button type=\"primary\" size=\"medium\">\n          {buttonName}\n        </Button>\n      </form>\n      <p\n        className={`${styleAuthForm.footer} text text_type_main-default text_color_inactive`}\n      >\n        {footerQuestion}{\" \"}\n        <Link className={styleAuthForm.footerLink} to={link!}>\n          {footerLink}\n        </Link>\n      </p>\n      <p className=\"text text_type_main-default text_color_inactive\">\n        {\" \"}\n        {footerMoreQuestion}\n        <Link className={styleAuthForm.footerLink} to={moreLink!}>\n          {footerMoreLink}\n        </Link>\n      </p>\n    </section>\n  );\n}\n\nexport default AuthForm;\n","export const LOGIN_REQUEST: \"LOGIN_REQUEST\" = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS: \"LOGIN_SUCCESS\" = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILED: \"LOGIN_FAILED\" = \"LOGIN_FAILED\";\nexport const LOGOUT_REQUEST: 'LOGOUT_REQUEST' = 'LOGOUT_REQUEST';\nexport const LOGOUT_SUCCESS: 'LOGOUT_SUCCESS' = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAILED: 'LOGOUT_FAILED' = 'LOGOUT_FAILED';\nexport const GET_USER_REQUEST: \"GET_USER_REQUEST\" = \"GET_USER_REQUEST\";\nexport const GET_USER_SUCCESS: \"GET_USER_SUCCESS\" = \"GET_USER_SUCCESS\";\nexport const GET_USER_FAILED: \"GET_USER_FAILED\" = \"GET_USER_FAILED\";","import { login } from \"../../utils/api\";\nimport { logout } from '../../utils/api'; \nimport { getUser } from \"../../utils/api\";\nimport { AppDispatch, AppThunk } from '../types';\n\nimport {LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILED, LOGOUT_REQUEST, LOGOUT_SUCCESS, LOGOUT_FAILED, GET_USER_REQUEST, GET_USER_SUCCESS, GET_USER_FAILED} from '../constants/login';\nimport {TAuth, TUserData} from '../types/data';\n\nexport interface ILoginRequest {\n  readonly type: typeof LOGIN_REQUEST;\n}\n\nexport interface ILoginSuccess {\n  readonly type: typeof LOGIN_SUCCESS;\n  readonly loginData: TAuth;\n}\n\nexport interface ILoginFailed {\n  readonly type: typeof LOGIN_FAILED;\n}\n\nexport interface ILogoutRequest {\n  readonly type: typeof LOGOUT_REQUEST;\n}\n\nexport interface ILogoutSuccess {\n  readonly type: typeof LOGOUT_SUCCESS;\n  readonly logoutData: {\n    message: string;\n    success: boolean} \n}\n\nexport interface ILogoutFailed {\n  readonly type: typeof LOGOUT_FAILED;\n}\n\nexport interface IGetUserRequest {\n  readonly type: typeof GET_USER_REQUEST;\n}\n\nexport interface IGetUserSuccess {\n  readonly type: typeof GET_USER_SUCCESS;\n  readonly userData: TUserData\n}\n\nexport interface IGetUserFailed {\n  readonly type: typeof GET_USER_FAILED;\n  readonly status: {} //!!\n}\n\nexport type TLoginActions =\n| ILoginRequest\n| ILoginSuccess\n| ILoginFailed\n| ILogoutRequest\n| ILogoutSuccess\n| ILogoutFailed\n| IGetUserRequest\n| IGetUserSuccess\n| IGetUserFailed;\n\nexport const LoginRequestAction = (): ILoginRequest => ({\n  type: LOGIN_REQUEST,\n});\n\nexport const LoginSuccessAction = (loginData: TAuth): ILoginSuccess => ({\n  type: LOGIN_SUCCESS,\n  loginData,\n});\n\nexport const LoginFailedAction = (): ILoginFailed => ({\n  type: LOGIN_FAILED,\n});\n\nexport const LogoutRequestAction = (): ILogoutRequest => ({\n  type: LOGOUT_REQUEST\n});\n\nexport const LogoutSuccessAction = (logoutData: {message: string, success: boolean}): ILogoutSuccess => ({\n  type: LOGOUT_SUCCESS,\n  logoutData\n});\n\nexport const LogoutFailedAction = (): ILogoutFailed => ({\n  type: LOGOUT_FAILED\n});\n\nexport const GetUserRequestAction = (): IGetUserRequest => ({\n  type: GET_USER_REQUEST\n});\n\nexport const GetUserSuccessAction = (userData: TUserData): IGetUserSuccess => ({\n  type: GET_USER_SUCCESS,\n  userData\n});\n\nexport const GetUserFailedAction = (status: {}): IGetUserFailed => ({\n  type: GET_USER_FAILED,\n  status\n});\n\nexport const postLogin: AppThunk = (email: string, password: string) => {\n  return function (dispatch: AppDispatch) {\n    dispatch(LoginRequestAction());\n    return login(email, password)\n      .then((res) => {\n        if (res.success) {\n          localStorage.setItem(\"access\", res.accessToken);\n          localStorage.setItem(\"refresh\", res.refreshToken);\n          dispatch(LoginSuccessAction(res));\n        } else {\n          dispatch(LoginFailedAction());\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n}\n\nexport const postLogout: AppThunk = (token: string) => {\n  return function(dispatch: AppDispatch) {\n      dispatch(LogoutRequestAction());\n      logout(token)\n      .then((res) => {\n          if(res.success) {\n              localStorage.removeItem('access');\n              localStorage.removeItem('refresh');\n              dispatch(LogoutSuccessAction(res))\n          }\n          else {\n              dispatch(LogoutFailedAction())\n          }\n      })\n      .catch((err) => {\n          console.log(err)\n      })\n  }\n}\n\nexport const getUserData: AppThunk = (token: string) => {\n  return function (dispatch: AppDispatch) {\n    dispatch(GetUserRequestAction());\n    getUser(token)\n      .then((res) => {\n        if (res.success) {\n          dispatch(GetUserSuccessAction(res));\n        } else {\n          dispatch(GetUserFailedAction(res));\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n}\n","import AuthForm from \"../../components/auth-form/auth-form\";\nimport {\n  PasswordInput,\n  Input,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { postLogin } from \"../../services/actions/login\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"../../services/types/hooks\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nfunction SignIn() {\n  const [email, setEmail] = useState<string>();\n  const [password, setPassword] = useState<string>();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  let accessToken: string | null = localStorage.getItem(\"access\");\n  const { loginData } = useSelector(state => state.loginReducer);\n\n  function handleChangeEmail(e: React.ChangeEvent<HTMLInputElement>) {\n    setEmail(e.target.value);\n  }\n\n  function handleChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n    setPassword(e.target.value);\n  }\n\n  function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    dispatch(postLogin(email, password));\n  }\n  let location = useLocation<any>();\n\n  useEffect(() => {\n    if (accessToken && loginData.success) {\n      history.push(location.state ? location.state.from.pathname : \"/\");\n    }\n  }, [accessToken, history, location.state, loginData]);\n\n  return (\n    <AuthForm\n      title=\"Вход\"\n      buttonName=\"Войти\"\n      footerQuestion=\"Вы — новый пользователь?\"\n      footerLink=\"Зарегистрироваться\"\n      link=\"/register\"\n      footerMoreQuestion=\"Забыли пароль? \"\n      footerMoreLink=\"Восстановить пароль\"\n      moreLink=\"/forgot-password\"\n      submit={handleSubmit}\n    >\n      <Input\n        placeholder=\"Email\"\n        type=\"email\"\n        onChange={handleChangeEmail}\n        value={email || \"\"}\n      />\n      <PasswordInput onChange={handleChangePassword} value={password || \"\"} name=\"Password\" />\n    </AuthForm>\n  );\n}\n\nexport default SignIn;\n","export const REGISTER_REQUEST: \"REGISTER_REQUEST\" = \"REGISTER_REQUEST\";\nexport const REGISTER_SUCCESS: \"REGISTER_SUCCESS\" = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAILED: \"REGISTER_FAILED\" = \"REGISTER_FAILED\";","import { register } from \"../../utils/api\";\n\nimport {REGISTER_REQUEST, REGISTER_SUCCESS, REGISTER_FAILED} from '../constants/register';\n\nimport { AppDispatch, AppThunk } from '../types';\nimport {TAuth} from '../types/data';\n\nexport interface IRegisterRequest {\n  readonly type: typeof REGISTER_REQUEST;\n}\n\nexport interface IRegisterSuccess {\n  readonly type: typeof REGISTER_SUCCESS;\n  readonly registerData: TAuth;\n}\n\nexport interface IRegisterFailed {\n  readonly type: typeof REGISTER_FAILED;\n}\n\nexport type TRegisterActions =\n| IRegisterRequest\n| IRegisterSuccess\n| IRegisterFailed;\n\nexport const RegisterRequestAction = (): IRegisterRequest => ({\n  type: REGISTER_REQUEST\n});\n\nexport const RegisterSuccessAction = (registerData: TAuth): IRegisterSuccess => ({\n  type: REGISTER_SUCCESS,\n  registerData\n});\n\nexport const RegisterFailedAction = (): IRegisterFailed => ({\n  type: REGISTER_FAILED\n});\n\nexport const postRegister: AppThunk = (email: string, password: string, name: string) => {\n  return function (dispatch: AppDispatch) {\n    dispatch(RegisterRequestAction());\n    register(email, password, name)\n      .then((res) => {\n        if (res.success) {\n          dispatch(RegisterSuccessAction(res));\n        } else {\n          dispatch(RegisterFailedAction());\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n}\n","import AuthForm from \"../../components/auth-form/auth-form\";\nimport {\n  PasswordInput,\n  Input,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { postRegister } from \"../../services/actions/register\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"../../services/types/hooks\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction RegistrationPage() {\n  const [email, setEmail] = useState<string>();\n  const [password, setPassword] = useState<string>();\n  const [name, setName] = useState<string>();\n  const dispatch = useDispatch();\n  const { registerData } = useSelector(state => state.registerReducer);\n  const history = useHistory();\n  let accessToken: string | null = localStorage.getItem(\"access\");\n\n  function handleChangeEmail(e: React.ChangeEvent<HTMLInputElement>) {\n    setEmail(e.target.value);\n  }\n\n  function handleChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n    setPassword(e.target.value);\n  }\n\n  function handleChangeName(e: React.ChangeEvent<HTMLInputElement>) {\n    setName(e.target.value);\n  }\n\n  function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n\n    dispatch(postRegister(email, password, name));\n  }\n\n  useEffect(() => {\n    if (registerData.success) {\n      history.replace({ pathname: \"/\" });\n    }\n  }, [registerData, history]);\n\n  useEffect(() => {\n    if (accessToken) {\n      history.replace({ pathname: \"/\" });\n    }\n  }, [accessToken, history]);\n\n  return (\n    <AuthForm\n      title=\"Регистрация\"\n      buttonName=\"Регистрация\"\n      footerQuestion=\"Уже зарегистрированы?\"\n      footerLink=\"Войти\"\n      link=\"/login\"\n      submit={handleSubmit}\n    >\n      <Input\n        placeholder=\"Имя\"\n        type=\"text\"\n        onChange={handleChangeName}\n        value={name || \"\"}\n      />\n      <Input\n        placeholder=\"Email\"\n        type=\"email\"\n        onChange={handleChangeEmail}\n        value={email || \"\"}\n      />\n      <PasswordInput onChange={handleChangePassword} value={password || \"\"} name=\"Password\" />\n    </AuthForm>\n  );\n}\n\nexport default RegistrationPage;\n","export const FORGOT_PASSWORD_REQUEST: \"FORGOT_PASSWORD_REQUEST\" = \"FORGOT_PASSWORD_REQUEST\";\nexport const FORGOT_PASSWORD_SUCCESS: \"FORGOT_PASSWORD_SUCCESS\" = \"FORGOT_PASSWORD_SUCCESS\";\nexport const FORGOT_PASSWORD_FAILED: \"FORGOT_PASSWORD_FAILED\" = \"FORGOT_PASSWORD_FAILED\";","import { forgotPassword } from \"../../utils/api\";\n\nimport {FORGOT_PASSWORD_REQUEST, FORGOT_PASSWORD_SUCCESS, FORGOT_PASSWORD_FAILED}\n  from '../constants/forgot-password';\n\nimport { AppDispatch, AppThunk } from '../types';\nimport {TForgotPassword} from '../types/data';\n\nexport interface IForgotPasswordRequest {\n  readonly type: typeof FORGOT_PASSWORD_REQUEST;\n}\n\nexport interface IForgotPasswordSuccess {\n  readonly type: typeof FORGOT_PASSWORD_SUCCESS;\n  readonly forgotPassword: TForgotPassword;\n}\n\nexport interface IForgotPasswordFailed {\n  readonly type: typeof FORGOT_PASSWORD_FAILED;\n}\n\nexport type TForgotPasswordActions =\n| IForgotPasswordRequest\n| IForgotPasswordSuccess\n| IForgotPasswordFailed;\n\nexport const ForgotPasswordRequestAction = (): IForgotPasswordRequest => ({\n  type: FORGOT_PASSWORD_REQUEST\n});\n\nexport const ForgotPasswordSuccessAction = (forgotPassword: TForgotPassword): IForgotPasswordSuccess => ({\n  type: FORGOT_PASSWORD_SUCCESS,\n  forgotPassword\n});\n\nexport const ForgotPasswordFailedAction = (): IForgotPasswordFailed => ({\n  type: FORGOT_PASSWORD_FAILED\n});\n\nexport const postForgotPassword: AppThunk = (email: string) => {\n  return function (dispatch: AppDispatch) {\n    dispatch(ForgotPasswordRequestAction());\n    forgotPassword(email)\n      .then((res) => {\n        if (res.success) {\n          dispatch(ForgotPasswordSuccessAction(res));\n        } else {\n          dispatch(ForgotPasswordFailedAction());\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n}\n","import AuthForm from \"../../components/auth-form/auth-form\";\nimport { Input } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { postForgotPassword } from \"../../services/actions/forgot-password\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"../../services/types/hooks\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction ForgotPassword() {\n  const [email, setEmail] = useState<string>();\n  const dispatch = useDispatch();\n  const { forgotPassword } = useSelector(state => state.forgotPasswordReducer);\n  const history = useHistory();\n  let accessToken: string | null = localStorage.getItem(\"access\");\n\n  function handleChangeEmail(e: React.ChangeEvent<HTMLInputElement>) {\n    setEmail(e.target.value);\n  }\n\n  function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    dispatch(postForgotPassword(email));\n  }\n\n  useEffect(() => {\n    if (!accessToken && forgotPassword.success) {\n      history.replace({ pathname: \"/reset-password\" });\n    }\n  }, [forgotPassword, accessToken, history]);\n\n  useEffect(() => {\n    if (accessToken) {\n      history.replace({ pathname: \"/\" });\n    }\n  }, [accessToken, history]);\n\n  return (\n    <AuthForm\n      title=\"Восстановление пароля\"\n      buttonName=\"Восстановить\"\n      footerQuestion=\"Вспомнили пароль?\"\n      footerLink=\"Войти\"\n      link=\"/login\"\n      submit={handleSubmit}\n    >\n      <Input\n        placeholder=\"Укажите e-mail\"\n        type=\"email\"\n        onChange={handleChangeEmail}\n        value={email || \"\"}\n      />\n    </AuthForm>\n  );\n}\n\nexport default ForgotPassword;\n","export const RECOVERY_PASSWORD_REQUEST: \"RECOVERY_PASSWORD_REQUEST\" = \"RECOVERY_PASSWORD_REQUEST\";\nexport const RECOVERY_PASSWORD_SUCCESS: \"RECOVERY_PASSWORD_SUCCESS\" = \"RECOVERY_PASSWORD_SUCCESS\";\nexport const RECOVERY_PASSWORD_FAILED: \"RECOVERY_PASSWORD_FAILED\" = \"RECOVERY_PASSWORD_FAILED\";","import { resetPassword } from \"../../utils/api\";\n\nimport {RECOVERY_PASSWORD_REQUEST, RECOVERY_PASSWORD_SUCCESS, RECOVERY_PASSWORD_FAILED}\nfrom '../constants/recovery-password';\n\nimport { AppDispatch, AppThunk } from '../types';\nimport {TForgotPassword} from '../types/data';\n\nexport interface IRecoveryPasswordRequest {\n  readonly type: typeof RECOVERY_PASSWORD_REQUEST;\n}\n\nexport interface IRecoveryPasswordSuccess {\n  readonly type: typeof RECOVERY_PASSWORD_SUCCESS;\n  readonly recoveryPassword: TForgotPassword\n}\n\nexport interface IRecoveryPasswordFailed {\n  readonly type: typeof RECOVERY_PASSWORD_FAILED;\n}\n\nexport type TRecoveryPasswordActions =\n| IRecoveryPasswordRequest\n| IRecoveryPasswordSuccess\n| IRecoveryPasswordFailed;\n\nexport const RecoveryPasswordRequestAction = (): IRecoveryPasswordRequest => ({\n  type: RECOVERY_PASSWORD_REQUEST\n});\n\nexport const RecoveryPasswordSuccessAction = (recoveryPassword: TForgotPassword): IRecoveryPasswordSuccess => ({\n  type: RECOVERY_PASSWORD_SUCCESS,\n  recoveryPassword\n});\n\nexport const RecoveryPasswordFailedAction = (): IRecoveryPasswordFailed => ({\n  type: RECOVERY_PASSWORD_FAILED\n});\n\nexport const postRecoveryPassword: AppThunk = (password: string, token: string) => {\n  return function (dispatch: AppDispatch) {\n    dispatch(RecoveryPasswordRequestAction());\n    resetPassword(password, token)\n      .then((res) => {\n        if (res.success) {\n          dispatch(RecoveryPasswordSuccessAction(res));\n        } else {\n          dispatch(RecoveryPasswordFailedAction());\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n}\n","import AuthForm from \"../../components/auth-form/auth-form\";\nimport { Input } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"../../services/types/hooks\";\nimport { useHistory } from \"react-router-dom\";\nimport { postRecoveryPassword } from \"../../services/actions/recovery-password\";\n\ninterface RootState {\n  recoveryPasswordReducer: any;\n  forgotPasswordReducer: any;\n}\n\nfunction RecoveryPassword() {\n  const [password, setPassword] = useState<string>();\n  const [token, setToken] = useState<string>();\n  const dispatch = useDispatch();\n  const { recoveryPassword } = useSelector(state => state.recoveryPasswordReducer\n  );\n  const history = useHistory();\n  let accessToken: string | null = localStorage.getItem(\"access\");\n  const { forgotPassword } = useSelector(state => state.forgotPasswordReducer\n  );\n\n  function handleChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n    setPassword(e.target.value);\n  }\n\n  function handleChangeToken(e: React.ChangeEvent<HTMLInputElement>) {\n    setToken(e.target.value);\n  }\n\n  function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    dispatch(postRecoveryPassword(password, token));\n  }\n\n  useEffect(() => {\n    if (recoveryPassword.success) {\n      history.replace({ pathname: \"/\" });\n    }\n  }, [recoveryPassword, history]);\n\n  useEffect(() => {\n    if (!forgotPassword.success) {\n      history.replace({ pathname: \"/forgot-password\" });\n    }\n  });\n\n  useEffect(() => {\n    if (accessToken) {\n      history.replace({ pathname: \"/\" });\n    }\n  }, [accessToken, history]);\n\n  return (\n    <AuthForm\n      title=\"Восстановление пароля\"\n      buttonName=\"Сохранить\"\n      footerQuestion=\"Вспомнили пароль?\"\n      footerLink=\"Войти\"\n      submit={handleSubmit}\n    >\n      <Input\n        placeholder=\"Введите новый пароль\"\n        type=\"password\"\n        onChange={handleChangePassword}\n        value={password || \"\"}\n      />\n      <Input\n        placeholder=\"Введите код из письма e-mail\"\n        type=\"text\"\n        onChange={handleChangeToken}\n        value={token || \"\"}\n      />\n    </AuthForm>\n  );\n}\n\nexport default RecoveryPassword;\n","export const UPDATE_USER_REQUEST: \"UPDATE_USER_REQUEST\" = \"UPDATE_USER_REQUEST\";\nexport const UPDATE_USER_SUCCESS: \"UPDATE_USER_SUCCESS\" = \"UPDATE_USER_SUCCESS\";\nexport const UPDATE_USER_FAILED: \"UPDATE_USER_FAILED\" = \"UPDATE_USER_FAILED\";","import { updateUser } from \"../../utils/api\";\n\nimport {UPDATE_USER_REQUEST, UPDATE_USER_SUCCESS, UPDATE_USER_FAILED}\nfrom '../constants/update-user';\n\nimport { AppDispatch, AppThunk } from '../types';\nimport {TUserData, TForgotPassword} from '../types/data';\n\nexport interface IUpdateUserRequest {\n  readonly type: typeof UPDATE_USER_REQUEST;\n}\n\nexport interface IUpdateUserSuccess {\n  readonly type: typeof UPDATE_USER_SUCCESS;\n  readonly updateUser: TUserData;\n}\n\nexport interface IUpdateUserFailed {\n  readonly type: typeof UPDATE_USER_FAILED;\n  readonly updatestatus: TForgotPassword;\n}\n\nexport type TUpdateUserActions =\n| IUpdateUserRequest\n| IUpdateUserSuccess\n| IUpdateUserFailed;\n\nexport const UpdateUserRequestAction = (): IUpdateUserRequest => ({\n  type: UPDATE_USER_REQUEST\n});\n\nexport const UpdateUserSuccessAction = (updateUser: TUserData): IUpdateUserSuccess => ({\n  type: UPDATE_USER_SUCCESS,\n  updateUser\n});\n\nexport const UpdateUserFailedAction = (updatestatus: TForgotPassword): IUpdateUserFailed => ({\n  type: UPDATE_USER_FAILED,\n  updatestatus\n});\n\nexport const updateUserData: AppThunk = (token: string, email: string, password: string, name: string) => {\n  return function (dispatch: AppDispatch) {\n    dispatch(UpdateUserRequestAction());\n    updateUser(token, email, password, name)\n      .then((res) => {\n        if (res.success) {\n          dispatch(UpdateUserSuccessAction(res));\n        } else {\n          dispatch(UpdateUserFailedAction(res));\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n}\n","import styleCardOrder from \"./cardOrder.module.css\";\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { FC, useEffect } from 'react';\nimport {TOrders, TIngredient} from '../../services/types/data';\nimport { useSelector } from \"../../services/types/hooks\";\nimport React from \"react\";\nimport { Link, useLocation, useRouteMatch } from \"react-router-dom\";\n\ninterface ICardOrder{\n    order: TOrders;\n    status: boolean;\n    onOpen: (item?: object) => void;\n    onClose?: () => void;\n}\n\nconst CardOrder: FC<ICardOrder> = ({order, status, onOpen}) => {\n\n    const { ingredients } = useSelector(state => state.ingredientsReducer);\n    const [currentIngredient, setCurrentIngredient] = React.useState<TIngredient[]>([]);\n    const [currentPrice, setCurrentPrice] = React.useState<number>();\n    const [date, setDate] = React.useState<string>();\n    const [isStatus, setIsStatus] = React.useState<boolean>(true);\n    const [countIngredients, setCountIngredients] = React.useState<number>();\n\n    useEffect(() => {\n        order.ingredients.map((id) => {\n            const ingredient = ingredients.filter(i => i._id === id)\n            setCurrentIngredient(currentIngredient => [...currentIngredient, ingredient[0]])\n        })\n    },[ingredients])\n\n    useEffect(() => {\n        let sum = currentIngredient.reduce((cur: number, item: TIngredient) => {\n            return cur + item.price\n        }, 0)\n        setCurrentPrice(sum)\n    },[currentIngredient])\n    \n    useEffect(() => {\n        setIsStatus(status)\n    },[status])\n\n    useEffect(() => {\n        const now = new Date();\n        const otherDate = new Date(Date.parse(order.createdAt))\n        const today = new Date(now.getFullYear(), now.getMonth(), now.getDate()).valueOf()\n        const dataCard = Date.parse(order.createdAt).valueOf()\n\n        const time =(`${new Date(Date.parse(order.createdAt)).getHours()}:${new Date(Date.parse(order.createdAt)).getMinutes().toString().length === 1 ? \n        '0'+ new Date(Date.parse(order.createdAt)).getMinutes() : \n        new Date(Date.parse(order.createdAt)).getMinutes()}`)\n\n        if (dataCard < today - 86400000) { \n            const delta=now.getTime()-otherDate.getTime();\n            setDate(`${Math.floor(delta/1000/60/60/24)} дня назад, ${time}`)\n        } else if (dataCard < today) {\n            setDate(`Вчера, ${time}`)\n        } else {\n            setDate(`Сегодня, ${time}`)\n        }\n    },[order])\n\n    const { url } = useRouteMatch();\n    const location = useLocation(); \n    const [statusOrder, setStatusOrder] = React.useState<string>();\n\n    function handleClick() {\n        onOpen(order);\n    }\n\n    useEffect(() => {\n        if(currentIngredient.length > 6) {\n            setCountIngredients(currentIngredient.slice(5, currentIngredient.length-1).length)\n        }\n    },[currentIngredient])\n\n    useEffect(() => {\n        if(order) {\n            if(order.status === 'done') {\n                setStatusOrder('Выполнен')\n            }\n            else if(order.status === 'pending') {\n                setStatusOrder('Готовится')\n            }\n            else if(order.status === 'created') {\n                setStatusOrder('Создан')\n            }\n        }\n    },[order])\n\n    return(\n        <Link className={styleCardOrder.link} to={{\n            pathname: `${url}/${order.number}`, // изменить на _id\n            state: { background: location },\n            }}>\n        <div className={styleCardOrder.container} onClick={handleClick}>\n            <div className={styleCardOrder.header}>\n                <p className={`${styleCardOrder.id}`}>#{order.number}</p>\n                <p className={`${styleCardOrder.date}`}>{date} i-GMT+3</p>\n            </div>\n            <p className={`${styleCardOrder.cardName}text text_type_main-medium ml-6`}>{order.name}</p>\n            {isStatus ? \n            <p className={`${styleCardOrder.status}`} style={statusOrder === 'Выполнен' ? {color: '#00CCCC'} : {color: '#F2F2F3'}}>{statusOrder}</p>\n            : null}\n            <div className={styleCardOrder.footer}>\n                <ul className={styleCardOrder.icons}>\n                {currentIngredient.map((ingredient, index) => { \n\n                    if(currentIngredient.length > 6 && index === 5) {\n                        return (\n                            <li className={styleCardOrder.icon} key={index}>\n                                <img className={styleCardOrder.lastPick} src={ingredient.image}></img>\n                                <span className={styleCardOrder.count}>{countIngredients}</span>\n                            </li>\n                        )\n                    }\n                    else {\n                        return(\n                        <li className={styleCardOrder.icon} key={index}>\n                                <img className={styleCardOrder.pick} src={ingredient.image}></img>\n                            </li>\n                        )\n                    }\n                 })}\n                </ul>\n                <div className={styleCardOrder.price}>\n                    <p className={`${styleCardOrder.priceValue}text text_type_digits-default mr-2`}>{currentPrice}</p>\n                    <CurrencyIcon type=\"primary\" />\n                </div>\n            </div>\n        </div>\n        </Link>\n    )\n}\n\nexport default CardOrder;","export const WS_CONNECTION_START: \"WS_CONNECTION_START\" = 'WS_CONNECTION_START';\nexport const WS_CONNECTION_SUCCESS: \"WS_CONNECTION_SUCCESS\" = 'WS_CONNECTION_SUCCESS';\nexport const WS_CONNECTION_ERROR: \"WS_CONNECTION_ERROR\" = 'WS_CONNECTION_ERROR';\nexport const WS_CONNECTION_CLOSED: \"WS_CONNECTION_CLOSED\" = 'WS_CONNECTION_CLOSED';\nexport const WS_GET_MESSAGE: \"WS_GET_MESSAGE\" = 'WS_GET_MESSAGE';\nexport const WS_SEND_MESSAGE: \"WS_SEND_MESSAGE\" = 'WS_SEND_MESSAGE';\nexport const WS_CONNECTION_START_PROFILE: \"WS_CONNECTION_START_PROFILE\" = 'WS_CONNECTION_START_PROFILE';","import {\n    WS_CONNECTION_START,\n    WS_CONNECTION_SUCCESS,\n    WS_CONNECTION_ERROR,\n    WS_CONNECTION_CLOSED,\n    WS_GET_MESSAGE,\n    WS_SEND_MESSAGE,\n    WS_CONNECTION_START_PROFILE\n  } from '../constants/wsAction';\n  import {TMessage} from '../types/data';\n\n  export interface IwsConnectionStart {\n    readonly type: typeof WS_CONNECTION_START;\n}\n\nexport interface IwsConnectionSuccess {\n    readonly type: typeof WS_CONNECTION_SUCCESS;\n}\n  \nexport interface IwsConnectionError {\n    readonly type: typeof WS_CONNECTION_ERROR;\n}\n  \nexport interface IwsConnectionClosed {\n    readonly type: typeof WS_CONNECTION_CLOSED;\n}\n\nexport interface IwsGetMessage{\n    readonly type: typeof WS_GET_MESSAGE,\n    readonly payload: TMessage;\n}\n\nexport interface IwsSendMessage{\n    readonly type: typeof WS_SEND_MESSAGE,\n    readonly messages: TMessage;\n}\n\n\nexport interface IwsConnectionStartProfile{\n    readonly type: typeof WS_CONNECTION_START_PROFILE\n}\n\nexport type TWSoketActions =\n| IwsConnectionSuccess\n| IwsConnectionError\n| IwsConnectionClosed\n| IwsConnectionStart\n| IwsGetMessage\n| IwsSendMessage\n| IwsConnectionStartProfile;\n\nexport const wsConnectionStartAction = (): IwsConnectionStart => ({\n    type: WS_CONNECTION_START\n  });\n\n  export const wsConnectionStartProfileAction = (): IwsConnectionStartProfile => ({\n    type: WS_CONNECTION_START_PROFILE\n  });\n\nexport const wsConnectionSuccessAction = (): IwsConnectionSuccess => ({\n    type: WS_CONNECTION_SUCCESS\n  });\n  \n  export const wsConnectionErrorAction = (): IwsConnectionError => ({\n    type: WS_CONNECTION_ERROR\n  });\n  \n  export const wsConnectionClosedAction = (): IwsConnectionClosed => ({\n    type: WS_CONNECTION_CLOSED\n  });\n\n  export const WsGetMessageAction = (payload: TMessage): IwsGetMessage => ({\n    type: WS_GET_MESSAGE,\n    payload\n  });\n\n  export const WsSendMessageAction = (messages: TMessage): IwsSendMessage => ({\n    type: WS_SEND_MESSAGE,\n    messages\n  });\n","import styleProfile from \"./profile.module.css\";\nimport {\n  Input,\n  Button,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"../../services/types/hooks\";\nimport { useEffect, useState } from \"react\";\nimport { updateUserData } from \"../../services/actions/update-user\";\nimport { postLogout } from \"../../services/actions/login\";\nimport { getCookie } from \"../../utils/constants\";\nimport CardOrder from '../../components/card-order/cardOrder';\nimport { FC } from 'react';\nimport {TOrders} from '../../services/types/data';\nimport {wsConnectionClosedAction, wsConnectionStartProfileAction} from '../../services/actions/wsAction';\n\ninterface IProfile {\n  openModal: () => void;\n  onClose: () => void;\n}\n\nconst Profile: FC<IProfile> = ({openModal, onClose}) => {\n  let location = useLocation();\n  const dispatch = useDispatch();\n  const { userData } = useSelector(state => state.loginReducer);\n  const { updateUser } = useSelector(state => state.updateUserReducer);\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>();\n  const [name, setName] = useState<string>(\"\");\n  const [inputChange, setInputChange] = useState<boolean>(false);\n  const { login } = useSelector(state => state.loginReducer);\n\n  let accessToken: string | null = localStorage.getItem(\"access\");\n\n  const history = useHistory();\n\n  function handleChangeEmail(e: React.ChangeEvent<HTMLInputElement>) {\n    setEmail(e.target.value);\n  }\n\n  function handleChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n    setPassword(e.target.value);\n  }\n\n  function handleChangeName(e: React.ChangeEvent<HTMLInputElement>) {\n    setName(e.target.value);\n  }\n\n  const handleSubmit = (e?: React.MouseEvent<HTMLButtonElement>): void => {\n    //хендел обновления данных\n    e!.preventDefault();\n    dispatch(updateUserData(accessToken, email, password, name));\n    setInputChange(false);\n  }\n\n  const handleСancelСhanges = (e?: React.MouseEvent<HTMLButtonElement>): void => { //\n    e!.preventDefault();\n    setName(updateUser.user ? updateUser.user.name : userData.user.name);\n    setEmail(updateUser.user ? updateUser.user.email : userData.user.email);\n    setPassword('')\n    setInputChange(false);\n  };\n\n  useEffect(() => {\n    setName(updateUser.user ? updateUser.user.name : userData.user ? userData.user.name : '');\n    setEmail(updateUser.user ? updateUser.user.email : userData.user ?  userData.user.email : '');\n  }, [userData]);\n\n  function handleLogout(e: React.MouseEvent<HTMLElement>) {\n    //хендел выхода из профиля\n    e.preventDefault();\n    dispatch(postLogout(getCookie(\"refresh\")!));\n  }\n\n  useEffect(() => {\n    //переход после выхода из профиля\n    if (!accessToken && !login) {\n      history.replace({ pathname: \"/login\" });\n    }\n  }, [accessToken, history, login]);\n\n  useEffect(() => {\n    if (userData.user && name) {\n      if (\n        userData.user.name !== name ||\n        userData.user.email !== email \n      ) {\n        setInputChange(true);\n      } else {\n        setInputChange(false);\n      }\n    }\n  }, [name, userData, email]);\n\n  const { messages } = useSelector(state => state.wsReducer);\n  const [isOrder, setIsOrder] = useState<TOrders[]>()\n\n    useEffect(() => {\n      if(messages) {\n          if(messages.orders) {\n              setIsOrder(messages.orders.reverse())\n          }\n      }\n    },[messages])\n\n    useEffect(() => {\n      if(location.pathname === '/profile/orders') {\n        dispatch(wsConnectionStartProfileAction())\n        }\n        return () => {\n          dispatch(wsConnectionClosedAction())\n      } \n    },[dispatch, location.pathname])\n\n  return (\n    <section className={styleProfile.container}>\n      <div className={styleProfile.main}>\n        <nav className={styleProfile.nav}>\n          <ul className={styleProfile.navList}>\n            <Link to=\"/profile\" className={styleProfile.link}>\n              <li\n                className={`${\n                  location.pathname === \"/profile\"\n                    ? styleProfile.list_active\n                    : styleProfile.list\n                } text text_type_main-medium text_color_inactive mb-6`}\n              >\n                Профиль\n              </li>\n            </Link>\n            <Link to=\"/profile/orders\" className={styleProfile.link}>\n              <li\n                className={`${\n                  location.pathname === \"/profile/orders\"\n                    ? styleProfile.list_active\n                    : styleProfile.list\n                } text text_type_main-medium text_color_inactive mb-6`}\n              >\n                История заказов\n              </li>\n            </Link>\n            <Link to=\"/login\" className={styleProfile.link}>\n              <li\n                className={`${styleProfile.list} text text_type_main-medium text_color_inactive mb-6`}\n                onClick={handleLogout}\n              >\n                Выход\n              </li>\n            </Link>\n          </ul>\n        </nav>\n        {location.pathname === \"/profile\" && (\n          <div className={styleProfile.inputs}>\n            <Input\n              type=\"text\"\n              placeholder=\"Имя\"\n              icon=\"EditIcon\"\n              value={name || \"\"}\n              onChange={handleChangeName}\n            />\n            <Input\n              placeholder=\"Логин\"\n              type=\"email\"\n              icon=\"EditIcon\"\n              value={email || \"\"}\n              onChange={handleChangeEmail}\n            />\n            <Input\n              placeholder=\"Пароль\"\n              type=\"password\"\n              icon=\"EditIcon\"\n              value={password || \"\"}\n              onChange={handleChangePassword}\n            />\n          </div>\n        )}\n        {location.pathname === \"/profile/orders\" && (\n          <div className={styleProfile.orders}>\n            {isOrder ? isOrder.map((item) => {\n              return(\n              <CardOrder\n                order={item}\n                key={item._id}\n                status={true}\n                onOpen={openModal}\n                onClose={onClose}\n              />\n              )\n            }) : null}\n          </div>\n        )}\n      </div>\n      {location.pathname !== \"/profile/orders\" ?\n      <div className={styleProfile.footer}>\n        <p\n          className={`${styleProfile.info} text text_type_main-default text_color_inactive`}\n        >\n          В этом разделе вы можете изменить свои персональные данные\n        </p>\n        \n        <div\n          className={\n            inputChange ? styleProfile.buttons_active : styleProfile.buttons\n          }\n        >\n          <Button type=\"secondary\" size=\"medium\" onClick={handleСancelСhanges}>\n            Отмена\n          </Button>\n\n          <Button type=\"primary\" size=\"medium\" onClick={handleSubmit}>\n            Сохранить\n          </Button>\n        </div>\n        \n      </div>\n      : \n      <p className={styleProfile.orderListInfo}>В этом разделе вы можете просмотреть свою историю заказов</p>\n      }\n    </section>\n  );\n}\n\nexport default Profile;\n","import { Route, Redirect } from \"react-router-dom\";\nimport { FunctionComponent } from 'react';\n\nexport const ProtectedRoute: FunctionComponent  = ({ children, ...rest }) => {\n  let accessToken: string | null = localStorage.getItem(\"access\");\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        accessToken ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n","export const UPDATE_TOKEN_REQUEST: \"UPDATE_TOKEN_REQUEST\" = \"UPDATE_TOKEN_REQUEST\";\nexport const UPDATE_TOKEN_SUCCESS: \"UPDATE_TOKEN_SUCCESS\" = \"UPDATE_TOKEN_SUCCESS\";\nexport const UPDATE_TOKEN_FAILED: \"UPDATE_TOKEN_FAILED\" = \"UPDATE_TOKEN_FAILED\";","import { updateToken } from \"../../utils/api\";\n\nimport {UPDATE_TOKEN_REQUEST, UPDATE_TOKEN_SUCCESS, UPDATE_TOKEN_FAILED}\nfrom '../constants/update-token';\n\nimport { AppDispatch, AppThunk } from '../types';\nimport {TUpdateToken} from '../types/data';\n\nexport interface IUpdateTokenRequest {\n  readonly type: typeof UPDATE_TOKEN_REQUEST;\n}\n\nexport interface IUpdateTokenSuccess {\n  readonly type: typeof UPDATE_TOKEN_SUCCESS;\n  readonly updateTokenData: TUpdateToken;\n}\n\nexport interface IUpdateTokenFailed {\n  readonly type: typeof UPDATE_TOKEN_FAILED;\n}\n\nexport type TUpdateTokenActions =\n| IUpdateTokenRequest\n| IUpdateTokenSuccess\n| IUpdateTokenFailed;\n\nexport const UpdateTokenRequestAction = (): IUpdateTokenRequest => ({\n  type: UPDATE_TOKEN_REQUEST\n});\n\nexport const UpdateTokenSuccessAction = (updateTokenData: TUpdateToken): IUpdateTokenSuccess => ({\n  type: UPDATE_TOKEN_SUCCESS,\n  updateTokenData\n});\n\nexport const UpdateTokenFailedAction = (): IUpdateTokenFailed => ({\n  type: UPDATE_TOKEN_FAILED\n});\n\nexport const postUpdateToken: AppThunk = (token: string) => {\n  return function (dispatch: AppDispatch) {\n    dispatch(UpdateTokenRequestAction());\n    updateToken(token)\n      .then((res) => {\n        if (res.success) {\n          localStorage.setItem(\"access\", res.accessToken);\n          localStorage.setItem(\"refresh\", res.refreshToken);\n          dispatch(UpdateTokenSuccessAction(res));\n        } else {\n          dispatch(UpdateTokenFailedAction());\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n}\n","import { useEffect } from \"react\";\nimport styleIngredient from \"../ingredient-details/ingredient-details.module.css\";\nimport { useSelector } from \"../../services/types/hooks\";\nimport { useParams } from \"react-router-dom\";\nimport { FC } from 'react';\n\ninterface IIngredientDetails {\n  modal: (id: string) => void;\n}\n\nconst IngredientDetails: FC<IIngredientDetails> = ({modal}) => {\n  const { currentIngredient } = useSelector(state => state.appReducer); //данные полученные из хранилища\n  const { id } = useParams<{id?: string}>();\n\n  useEffect(() => {\n    if(id) {\n      modal(id)\n    }\n  },[id])\n\n  return (\n    <div className={styleIngredient.container}>\n      <h2\n        className={`${styleIngredient.name}text text_type_main-large mt-10 ml-10`}\n      >\n        Детали ингредиента\n      </h2>\n      <div className={styleIngredient.description}>\n        <img\n          className={styleIngredient.img}\n          src={currentIngredient!.image_large}\n          alt={currentIngredient!.name}\n        />\n        <p className=\"text text_type_main-medium mt-4 mb-8\">\n          {currentIngredient!.name}\n        </p>\n        <ul className={`${styleIngredient.stat} mb-15`}>\n          <div className={`${styleIngredient.list} mr-5`}>\n            <p className=\"text text_type_main-default text_color_inactive\">\n              Калории,ккал\n            </p>\n            <p className=\"text text_type_main-default text_color_inactive\">\n              {currentIngredient!.calories}\n            </p>\n          </div>\n\n          <div className={`${styleIngredient.list} mr-5`}>\n            <p className=\"text text_type_main-default text_color_inactive\">\n              Белки, г\n            </p>\n            <p className=\"text text_type_main-default text_color_inactive\">\n              {currentIngredient!.proteins}\n            </p>\n          </div>\n\n          <div className={`${styleIngredient.list} mr-5`}>\n            <p className=\"text text_type_main-default text_color_inactive\">\n              Жиры, г\n            </p>\n            <p className=\"text text_type_main-default text_color_inactive\">\n              {currentIngredient!.fat}\n            </p>\n          </div>\n\n          <div className={styleIngredient.list}>\n            <p className=\"text text_type_main-default text_color_inactive\">\n              Углеводы, г\n            </p>\n            <p className=\"text text_type_main-default text_color_inactive\">\n              {currentIngredient!.carbohydrates}\n            </p>\n          </div>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default IngredientDetails;\n","export const ADD_MODAL_DATA: 'ADD_MODAL_DATA' = 'ADD_MODAL_DATA';\nexport const DELETE_MODAL_DATA: 'DELETE_MODAL_DATA' = 'DELETE_MODAL_DATA';\nexport const ADD_MODAL_PROFILE: 'ADD_MODAL_PROFILE' = 'ADD_MODAL_PROFILE';\n","import {ADD_MODAL_DATA, DELETE_MODAL_DATA, ADD_MODAL_PROFILE} from '../constants/app';\nimport {TIngredient, TOrders} from '../types/data';\n\nexport interface IAddModalData {\n    readonly type: typeof ADD_MODAL_DATA;\n    readonly item?: TIngredient;\n}\n\nexport interface IDeleteModalData {\n    readonly type: typeof DELETE_MODAL_DATA;\n}\n\nexport interface IAddModalProfile {\n    readonly type: typeof ADD_MODAL_PROFILE;\n    readonly order?: TOrders;\n}\n\nexport type TAppActions =\n| IAddModalData\n|IAddModalProfile\n| IDeleteModalData;\n\nexport const AddModalDataAction = (item?: TIngredient): IAddModalData => ({\n    type: ADD_MODAL_DATA,\n    item\n});\n\nexport const AddModalProfileAction = (order?: TOrders): IAddModalProfile => ({\n    type: ADD_MODAL_PROFILE,\n    order\n});\n\nexport const DeleteModalDataAction = (): IDeleteModalData => ({\n    type: DELETE_MODAL_DATA\n  });","import IngredientDetails from \"../ingredient-details/ingredient-details\";\nimport styleIngredient from \"../ingredient/ingredient.module.css\";\nimport { useDispatch, useSelector } from \"../../services/types/hooks\";\nimport { useEffect, useState } from \"react\";\nimport { FC } from 'react';\nimport { AddModalDataAction } from \"../../services/actions/app\";\nimport {TIngredient} from '../../services/types/data';\n\nconst Ingredient: FC = () => {\n  const dispatch = useDispatch();\n  const { ingredients } = useSelector(state => state.ingredientsReducer);\n  const [item, setItem] = useState<TIngredient>();\n  const [currentIngredientId, setCurrentIngredientId] = useState<string>();\n\n  const ingredient =(id: string) => {\n    setCurrentIngredientId(id)\n  }\n\n  useEffect(() => {\n    if(currentIngredientId) {\n      setItem(ingredients.find((item: {_id: string}) => item._id === currentIngredientId));\n    }\n  },[ingredients])\n\n  \n  useEffect(() => {\n    if (item) {\n      dispatch(AddModalDataAction(item));\n    }\n  }, [item, dispatch]);\n\n  return (\n    <div className={styleIngredient.container}>\n      <IngredientDetails modal={ingredient}/>\n    </div>\n  );\n}\n\nexport default Ingredient;\n","export const GET_INGREDIENTS_REQUEST: \"GET_INGREDIENTS_REQUEST\" = \"GET_INGREDIENTS_REQUEST\";\nexport const GET_INGREDIENTS_SUCCESS: \"GET_INGREDIENTS_SUCCESS\" = \"GET_INGREDIENTS_SUCCESS\";\nexport const GET_INGREDIENTS_FAILED: \"GET_INGREDIENTS_FAILED\" = \"GET_INGREDIENTS_FAILED\";\n","import { getIngredients } from \"../../utils/api\"; //вызов данных из апи\n\nimport {GET_INGREDIENTS_REQUEST, GET_INGREDIENTS_SUCCESS, GET_INGREDIENTS_FAILED}\n  from '../constants/burger-ingredients';\n\nimport { AppDispatch, AppThunk } from '../types';\nimport {TIngredient} from '../types/data';\n\nexport interface IGetIngredientsRequest {\n  readonly type: typeof GET_INGREDIENTS_REQUEST;\n}\n\nexport interface IGetIngredientsSucces {\n  readonly type: typeof GET_INGREDIENTS_SUCCESS;\n  readonly ingredients: ReadonlyArray<TIngredient>;\n}\n\nexport interface IGetIngredientsFailed {\n  readonly type: typeof GET_INGREDIENTS_FAILED;\n}\n\nexport type TGetIngredientsActions =\n| IGetIngredientsRequest\n| IGetIngredientsSucces\n| IGetIngredientsFailed;\n\nexport const GetIngredientsRequestAction = (): IGetIngredientsRequest => ({\n  type: GET_INGREDIENTS_REQUEST\n});\n\nexport const GetIngredientsSuccesAction = (ingredients: ReadonlyArray<TIngredient>): IGetIngredientsSucces => ({\n  type: GET_INGREDIENTS_SUCCESS,\n  ingredients\n});\n\nexport const GetIngredientsFailedAction = (): IGetIngredientsFailed => ({\n  type: GET_INGREDIENTS_FAILED\n});\n\n//усилитель для вывода асинхронных данных из апи\nexport const getItems: AppThunk = () => \n   (dispatch: AppDispatch) => {\n    dispatch(GetIngredientsRequestAction());\n    getIngredients()\n      .then((res) => {\n        if (res.success) {\n          dispatch(GetIngredientsSuccesAction(res.data));\n        } else {\n          dispatch(GetIngredientsFailedAction());\n        }\n      })\n      .catch((err) => {\n        dispatch(GetIngredientsFailedAction());\n        console.log(err);\n      });\n  };\n\n","import styleListOrder from \"./listOrder.module.css\";\nimport CardOrder from '../card-order/cardOrder';\nimport { useSelector } from \"../../services/types/hooks\";\nimport { FC, useEffect, useState } from 'react';\nimport {TOrders} from '../../services/types/data';\n\ninterface IListOrder{\n  openModal: () => void;\n  onClose: () => void;\n}\n\nconst ListOrder: FC<IListOrder> = ({openModal, onClose}) => {\n    const [isOrder, setIsOrder] = useState<TOrders[]>()\n    const { messages } = useSelector(state => state.wsReducer);\n    \n    useEffect(() => {\n        if(messages) {\n            if(messages.orders) {\n                setIsOrder(messages.orders)\n            }\n        }\n    }, [messages])\n\n    return(\n        <section className={styleListOrder.block}>\n            <h2 className={`${styleListOrder.title}text text_type_main-large mb-5 mt-10`}>\n            Лента заказов\n            </h2>\n            <div className={styleListOrder.container}>\n                {isOrder ? isOrder.map((item: any) => {\n                    return (\n                        <CardOrder\n                            order={item}\n                            key={item._id}\n                            status={false}\n                            onOpen={openModal}\n                            onClose={onClose}\n                        />\n                    )\n                }) : null}\n            </div>\n        </section>\n    )\n}\n\nexport default ListOrder","import styleStatusOrder from \"./statusOrder.module.css\";\nimport { useSelector } from \"../../services/types/hooks\";\nimport { useEffect, useState } from \"react\";\nimport {TOrders} from '../../services/types/data';\n\nfunction StatusOrder() {\n    const { messages } = useSelector(state => state.wsReducer);\n    const [isOrder, setIsOrder] = useState<TOrders[]>()\n\n    useEffect(() => {\n        if(messages) {\n            if(messages.orders) {\n                setIsOrder(messages.orders)\n            }\n        }\n    }, [messages])\n\n    return(\n        <div className={styleStatusOrder.container}>\n            <div className={styleStatusOrder.readiness}>\n                <div className={styleStatusOrder.statusBlock}>\n                    <h3 className=\"text text_type_main-medium\">Готовы:</h3>\n                    <ul className={styleStatusOrder.statusList}>\n                        {isOrder ? isOrder.map((item, index: number) => {\n                            if(item.status === 'done') {\n                                return (\n                                    <li className={styleStatusOrder.idReady} key={index}>{item.number}</li>\n                                )\n                            }\n                        }) : null}\n                    </ul>\n                </div>\n                <div className={styleStatusOrder.statusBlock}>\n                    <h3 className=\"text text_type_main-medium\">В работе:</h3>\n                    <ul className={styleStatusOrder.statusList}>\n                    {isOrder ? isOrder.map((item, index: number) => {\n                            if(item.status === 'pending') {\n                                return (\n                                    <li className={styleStatusOrder.idWork} key={index}>{item.number}</li>\n                                )\n                            }\n                        }) : null}\n                    </ul>\n                </div>\n            </div>\n            <p className=\"text text_type_main-medium\">Выполнено за все время:</p>\n            <p className=\"text text_type_digits-large mb-15\">{messages.total}</p>\n            <p className=\"text text_type_main-medium\">Выполнено за сегодня:</p>\n            <p className=\"text text_type_digits-large\">{messages.totalToday}</p>\n        </div>\n    )\n}\nexport default StatusOrder;","import styleOrderFeed from \"./orderFeed.module.css\";\nimport ListOrder from '../../components/list-order/listOrder';\nimport StatusOrder from '../../components/statusOrder/statusOrder';\nimport { FC, useEffect } from 'react';\nimport { useDispatch } from \"../../services/types/hooks\";\nimport {wsConnectionStartAction, wsConnectionClosedAction} from '../../services/actions/wsAction';\n\ninterface IOrderFeed {\n  openModal: () => void;\n  onClose: () => void;\n}\n\nconst OrderFeed: FC<IOrderFeed> = ({openModal, onClose}) => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(wsConnectionStartAction())\n        return () => {\n            dispatch(wsConnectionClosedAction())\n        }\n      },[dispatch])\n\n    return(\n        <section className={styleOrderFeed.block}>\n            <ListOrder \n                openModal={openModal}\n                onClose={onClose}\n            />\n            <StatusOrder/>\n        </section>\n    )\n}\nexport default OrderFeed;","import styleOrderInformation from \"./orderInformation.module.css\";\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { useSelector } from \"../../services/types/hooks\";\nimport React, { useEffect } from 'react';\nimport {TIngredient} from '../../services/types/data';\nimport { FC } from 'react';\nimport { useParams } from \"react-router-dom\";\n\ninterface IOrderInformation {\n    modal: (id: string) => void;\n  }\n\nconst OrderInformation: FC<IOrderInformation> = ({modal}) =>  {\n    const { id } = useParams<{id?: string}>();\n\n    useEffect(() => {\n      if(id) {\n        modal(id)\n      }\n    },[id])\n\n    const { currentOrder } = useSelector(state => state.appReducer);\n    const { ingredients } = useSelector(state => state.ingredientsReducer);\n    const [currentIngredient, setCurrentIngredient] = React.useState<TIngredient[]>([]);\n    const [date, setDate] = React.useState<string>();\n    const [currentPrice, setCurrentPrice] = React.useState<number>();\n    const [statusOrder, setStatusOrder] = React.useState<string>();\n\n    useEffect(() => {\n        if(currentOrder!.ingredients) {\n            const order: TIngredient[] = [];\n            currentOrder!.ingredients.map((id) => {\n                const ingredient = ingredients.filter(i => i._id === id)\n                order.push(ingredient[0])\n            }) \n            setCurrentIngredient(order)\n        }\n    },[currentOrder])\n\n    useEffect(() => {\n        const now = new Date();\n        const otherDate = new Date(Date.parse(currentOrder!.createdAt))\n        const today = new Date(now.getFullYear(), now.getMonth(), now.getDate()).valueOf()\n        const dataCard = Date.parse(currentOrder!.createdAt).valueOf()\n\n        const time =(`${new Date(Date.parse(currentOrder!.createdAt)).getHours()}:${new Date(Date.parse(currentOrder!.createdAt)).getMinutes().toString().length === 1 ? \n        '0'+ new Date(Date.parse(currentOrder!.createdAt)).getMinutes() : \n        new Date(Date.parse(currentOrder!.createdAt)).getMinutes()}`)\n\n        if (dataCard < today - 86400000) { \n            const delta=now.getTime()-otherDate.getTime();\n            setDate(`${Math.floor(delta/1000/60/60/24)} дня назад, ${time}`)\n        } else if (dataCard < today) {\n            setDate(`Вчера, ${time}`)\n        } else {\n            setDate(`Сегодня, ${time}`)\n        }\n    },[currentOrder!])\n\n    useEffect(() => {\n        const sum = currentIngredient.reduce((cur: number, item: TIngredient) => {\n            return (cur + item.price);\n        }, 0)\n            setCurrentPrice(sum)\n    },[currentIngredient])\n\n    const uniqueIngredient = Array.from(new Set(currentIngredient))\n\n    useEffect(() => {\n        if(currentOrder) {\n            if(currentOrder.status === 'done') {\n                setStatusOrder('Выполнен')\n            }\n            else if(currentOrder.status === 'pending') {\n                setStatusOrder('Готовится')\n            }\n            else if(currentOrder.status === 'created') {\n                setStatusOrder('Создан')\n            }\n        }\n    },[currentOrder])\n\n    return(\n        <section className={styleOrderInformation.container}>\n            <p className={styleOrderInformation.id}>#{currentOrder!.number}</p>\n            <h2 className=\"text text_type_main-medium\">{currentOrder!.name}</h2>\n            <p className={styleOrderInformation.status} style={statusOrder === 'Выполнен' ? {color: '#00CCCC'} : {color: '#F2F2F3'}}>{statusOrder}</p>\n            <p className=\"text text_type_main-medium mb-6\">Состав:</p>\n            <div className={styleOrderInformation.orderList}>\n                <ul className={styleOrderInformation.list}>\n                    {uniqueIngredient.map((elem, index) => {\n                        \n                        const repeat = currentIngredient.filter(item => item._id === elem._id).length;\n                        \n                        return(\n                            <li className={styleOrderInformation.ingredient} key={index}>\n                                <div className={styleOrderInformation.icon}>\n                                    <img className={styleOrderInformation.img} src={elem.image}></img>\n                                </div>\n                                <p className={styleOrderInformation.name}>{elem.name}</p>\n                                <div className={styleOrderInformation.price}>\n                                    <p className={styleOrderInformation.priceValue}>{repeat} x {elem.price}</p>\n                                    <CurrencyIcon type=\"primary\" />\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            </div>\n            <div className={styleOrderInformation.footer}>\n                <p className={styleOrderInformation.date}>{date} i-GMT+3</p>\n                <div className={styleOrderInformation.resultPrice}>\n                    <p className=\"text text_type_digits-default mr-2\">{currentPrice}</p>\n                    <CurrencyIcon type=\"primary\" />\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default OrderInformation;","import styleOrderPage from \"./order-page.module.css\";\nimport OrderInformation from '../order-information/orderInformation';\nimport { useSelector, useDispatch } from \"../../services/types/hooks\";\nimport React, { useEffect } from \"react\";\nimport { AddModalProfileAction } from \"../../services/actions/app\";\nimport {TOrders} from '../../services/types/data';\nimport {wsConnectionStartAction, wsConnectionClosedAction} from '../../services/actions/wsAction';\n\nfunction OrderPage() {\n\n    const dispatch = useDispatch();\n    const [currentProfileOrderId, setCurrentProfileOrderId] = React.useState<string>();\n    const [currentProfileOrderItem, setCurrentProfileOrderItem] = React.useState<TOrders>();\n    const { messages } = useSelector(state => state.wsReducer);\n    const [isOrder, setIsOrder] = React.useState<TOrders[]>()\n    const order = (id: string) => {\n        setCurrentProfileOrderId(id)\n      };\n\n    useEffect(() => {\n        dispatch(wsConnectionStartAction())\n      },[dispatch])\n\n      useEffect(() => {\n        if(messages) {\n          if(messages.orders) {\n            setIsOrder(messages.orders)\n          }\n        }\n    }, [dispatch, messages])\n    \n    useEffect(() => {\n        if(currentProfileOrderId) {\n          if(isOrder) {\n            setCurrentProfileOrderItem(isOrder.find(order => order.number.toString() === currentProfileOrderId));\n          }\n        }\n      },[dispatch, currentProfileOrderId, isOrder])\n    \n      useEffect(() => {\n        if(currentProfileOrderItem) {\n          const order = currentProfileOrderItem;\n          dispatch(AddModalProfileAction(order));\n        }\n      }, [currentProfileOrderItem, dispatch])\n\n    return(\n        <div className={styleOrderPage.container}>\n            <OrderInformation modal={order} />\n        </div>\n    )\n}\n\nexport default OrderPage;","import React, { useEffect } from \"react\";\nimport styleApp from \"./app.module.css\";\nimport AppHeader from \"../app-header/app-header\";\nimport BurgerIngredients from \"../burger-ingredients/burger-ingredients\";\nimport BurgerConstructor from \"../burger-constructor/burger-constructor\";\nimport { useDispatch, useSelector } from \"../../services/types/hooks\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { DndProvider } from \"react-dnd\";\nimport { Switch, Route, useLocation, useHistory } from \"react-router-dom\";\nimport { SignIn, RegistrationPage, ForgotPassword, RecoveryPassword, Profile} from \"../../pages\";\nimport { ProtectedRoute } from \"../protected-route/protected-route\";\nimport { postUpdateToken } from \"../../services/actions/update-token\";\nimport IngredientDetails from \"../ingredient-details/ingredient-details\";\nimport {TIngredient} from '../../services/types/data';\nimport Modal from \"../modal/modal\";\nimport Ingredient from \"../ingredient/ingredient\";\nimport { getItems } from \"../../services/actions/burger-ingredients\";\nimport { AddModalDataAction, AddModalProfileAction } from \"../../services/actions/app\";\nimport OrderFeed from '../../pages/order-feed/orderFeedPage';\nimport OrderInformation from '../order-information/orderInformation';\nimport {TOrders} from '../../services/types/data';\nimport OrderPage from '../order-page/order-page';\nimport {getUserData} from '../../services/actions/login';\n\ntype TItem = { \n  type: string;\n  _id?: string;\n  image: string;\n  name: string;\n  price: number;\n}\n\nfunction App() {\n  const [isIngredientModalOpen, setIsIngredientModalOpen] = React.useState<boolean>(true);\n  const [isOrderModalOpen, setIsOrderModalOpen] = React.useState<boolean>(false);\n  const [isProfileOrderModalOpen, setProfileIsOrderModalOpen] = React.useState<boolean>(true);\n  const dispatch = useDispatch();\n\n  function openModalOrder() {\n    setIsOrderModalOpen(true);\n  }\n\n  useEffect(() => {\n    dispatch(getItems());\n  }, [dispatch]);\n\n  const { ingredients } = useSelector(state => state.ingredientsReducer);\n  const [currentIngredientId, setCurrentIngredientId] = React.useState<string>();\n  const [currentIngredientItem, setCurrentIngredientItem] = React.useState<TIngredient>();\n\n  const openModalIgredients = (item?: TIngredient) => {\n    dispatch(AddModalDataAction(item!));\n    setIsIngredientModalOpen(true);\n  };\n\n  const openModalProfileOrder = (order?: TOrders) => {\n    dispatch(AddModalProfileAction(order!));\n    setProfileIsOrderModalOpen(true)\n  }\n\n  //передаем карточку ингредиента модальному окну\n  const ingredient = (id: string) => {\n    setCurrentIngredientId(id)\n  };\n\n  useEffect(() => {\n    if(currentIngredientId) {\n      setCurrentIngredientItem(ingredients.find((item: TItem) => item._id === currentIngredientId));\n    }\n  },[currentIngredientId, ingredients ])\n\n  useEffect(() => {\n    if(currentIngredientItem) {\n      const item = currentIngredientItem;\n\n      dispatch(AddModalDataAction(item!));\n      \n      setIsIngredientModalOpen(true);\n    }\n  }, [currentIngredientItem, dispatch])\n    \n  function closeIngredientModal() {\n    setIsIngredientModalOpen(false);\n    setProfileIsOrderModalOpen(false);\n    history.goBack();\n  }\n\n  function closeModal() {\n    setIsIngredientModalOpen(false);\n    setIsOrderModalOpen(false);\n    setProfileIsOrderModalOpen(false);\n  }\n  \n  const { updateTokenSuccess } = useSelector(state => state.updateTokenReducer);\n  const { userFailed } = useSelector(state => state.loginReducer);\n\n  function checkUser(accessToken: string) {\n    dispatch(getUserData(accessToken))\n  }\n\n  useEffect(() => {\n    const accessToken: string | null = localStorage.getItem(\"access\");\n    //обновляю данные пользователя\n    if (accessToken) {\n      checkUser(accessToken)\n    }\n  }, []);\n\n  useEffect(() => {\n    const accessToken: string | null = localStorage.getItem(\"access\");\n    if(updateTokenSuccess) {\n      checkUser(accessToken!)\n    }\n  },[updateTokenSuccess])\n\n  useEffect(() => {\n    const refreshToken: string | null = localStorage.getItem(\"refresh\");\n    if (userFailed) {\n      //если токен умер\n      dispatch(postUpdateToken(refreshToken)); //то отправляем запрос на новый токен\n    }\n  }, [dispatch, userFailed]);\n\n  const location = useLocation<any>();\n  const history = useHistory();\n  const background = location.state && location.state.background;\n\n  const [currentProfileOrderId, setCurrentProfileOrderId] = React.useState<string>();\n  const [currentProfileOrderItem, setCurrentProfileOrderItem] = React.useState<TOrders>();\n  const { messages } = useSelector((state: any) => state.wsReducer);\n  const [isOrder, setIsOrder] = React.useState<any>()\n\n  useEffect(() => {\n      if(messages) {\n        if(messages.orders) {\n          setIsOrder(messages.orders)\n        }\n      }\n  }, [dispatch, messages])\n\n  const order = (id: string) => {\n    setCurrentProfileOrderId(id)\n  };\n\n  useEffect(() => {\n    if(currentProfileOrderId) {\n      \n      if(isOrder) {\n        setCurrentProfileOrderItem(isOrder.find((order:any) => order.number.toString() === currentProfileOrderId));\n      }\n    }\n  },[dispatch, currentProfileOrderId, isOrder])\n\n  useEffect(() => {\n    if(currentProfileOrderItem) {\n      const order = currentProfileOrderItem;\n      dispatch(AddModalProfileAction(order));\n      setProfileIsOrderModalOpen(true)\n    }\n  }, [currentProfileOrderItem, dispatch])\n\n  return (\n    <div className={styleApp.page}>\n      <AppHeader />\n      <Switch location={background || location}>\n        <Route path=\"/\" exact={true}>\n          <section className={styleApp.menu}>\n            <DndProvider backend={HTML5Backend}>\n              <BurgerIngredients\n                onClose={closeModal}\n                openModal={openModalIgredients}\n              />\n              <BurgerConstructor\n                onClose={closeModal}\n                onOpen={isOrderModalOpen}\n                openModal={openModalOrder}\n              />\n            </DndProvider>\n          </section>\n        </Route>\n        <Route path=\"/login\" exact={true}>\n          <SignIn />\n        </Route>\n        <Route path=\"/register\" exact={true}>\n          <RegistrationPage />\n        </Route>\n        <Route path=\"/forgot-password\" exact={true}>\n          <ForgotPassword />\n        </Route>\n        <Route path=\"/reset-password\" exact={true}>\n          <RecoveryPassword />\n        </Route>\n\n        <Route path=\"/feed\" exact={true}>\n          <OrderFeed\n            openModal={openModalProfileOrder}\n            onClose={closeModal}\n          />\n        </Route>\n\n        <Route path=\"/feed/:id\" exact={true}>\n          <OrderPage />\n        </Route>\n\n        <Route path=\"/profile\" exact={true}>\n          <ProtectedRoute>\n            <Profile \n              openModal={openModalProfileOrder}\n              onClose={closeModal}\n            />\n          </ProtectedRoute>\n        </Route>\n        \n        <Route path=\"/profile/orders\" exact={true}>\n          <ProtectedRoute>\n            <Profile \n              openModal={openModalProfileOrder}\n              onClose={closeModal}\n            />\n          </ProtectedRoute>\n        </Route>\n\n        <Route path=\"/profile/orders/:id\" exact={true}>\n          <ProtectedRoute>\n            <OrderPage />\n          </ProtectedRoute>\n        </Route>\n        \n        <Route path=\"/ingredients/:id\" >\n          <Ingredient />\n        </Route>\n      </Switch>\n\n      {background && (\n        <Route path=\"/ingredients/:id\">\n          <Modal\n            onClose={closeIngredientModal}\n            onOpen={isIngredientModalOpen}\n          >\n            <IngredientDetails modal={ingredient}/>\n\n          </Modal>\n        </Route>\n      )}\n\n      {background && (\n        <Route path=\"/feed/:id\">\n          <Modal\n            onClose={closeIngredientModal}\n            onOpen={isProfileOrderModalOpen}\n          >\n            <OrderInformation modal={order}/>\n\n          </Modal>\n        </Route>\n      )}\n\n      {background && (\n        <Route path=\"/profile/orders/:id\">\n          <Modal\n            onClose={closeIngredientModal}\n            onOpen={isProfileOrderModalOpen}\n          >\n            <OrderInformation modal={order}/>\n\n          </Modal>\n        </Route>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import type { Middleware, MiddlewareAPI } from 'redux';\nimport {TWsActions} from '../types/data';\n\nexport const socketMiddleware = (wsUrl: string, wsActions: TWsActions): Middleware => {\n  return (store: MiddlewareAPI) => {\n    let socket: WebSocket | null = null;\n   \n    return next => action => {\n      const { dispatch } = store;\n      const { type } = action;\n      const { wsInit, wsInitProfile, onOpen, onClose, onError, onMessage } = wsActions;\n      const accessToken: string | null = localStorage.getItem(\"access\");\n\n      if(type === wsInit) {\n        socket = new WebSocket(`${wsUrl}/all`)\n      }\n\n      if (type === wsInitProfile) {\n        socket = new WebSocket(`${wsUrl}?token=${accessToken!.slice(7)}`);\n      }\n\n      if (socket) {\n        socket.onopen = (event) => {\n          dispatch({ type: onOpen, payload: event });\n        };\n\n        socket.onerror = (event) => {\n          dispatch({ type: onError, payload: event });\n        };\n\n        socket.onmessage = (event) => {\n          const { data } = event;\n          const parsedData = JSON.parse(data);\n          const { success, ...restParsedData } = parsedData;\n\n          dispatch({ type: onMessage, payload: restParsedData });\n        };\n\n        socket.onclose = (event) => {\n          dispatch({ type: onClose, payload: event });\n        };\n      }\n      next(action);\n    };\n  };\n};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {TGetIngredientsActions} from \"../actions/burger-ingredients\";\nimport {GET_INGREDIENTS_REQUEST, GET_INGREDIENTS_SUCCESS, GET_INGREDIENTS_FAILED} \nfrom '../constants/burger-ingredients';\nimport {TIngredient} from '../types/data';\n\nexport type TIngredientsState = {\n  ingredients: ReadonlyArray<TIngredient>;\n  ingredientsRequest: boolean;\n  ingredientsFailed: boolean; \n}\n\nconst initialState: TIngredientsState = {\n  ingredients: [], //список всех полученных ингредиентов\n  ingredientsRequest: false, // состояние во время вызова\n  ingredientsFailed: false, // состояние при отказе\n};\n\nexport const ingredientsReducer = (state = initialState, action: TGetIngredientsActions):\n TIngredientsState => {\n  switch (action.type) {\n    case GET_INGREDIENTS_REQUEST: {\n      return {\n        ...state,\n        ingredientsRequest: true,\n      };\n    }\n\n    case GET_INGREDIENTS_SUCCESS: {\n      return {\n        ...state,\n        ingredientsFailed: false,\n        ingredientsRequest: false,\n        ingredients: action.ingredients,\n      };\n    }\n\n    case GET_INGREDIENTS_FAILED: {\n      return {\n        ...initialState,\n        ingredientsFailed: true,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import {TAppActions} from '../actions/app';\nimport {ADD_MODAL_DATA, DELETE_MODAL_DATA, ADD_MODAL_PROFILE} from '../constants/app';\nimport {TIngredient, TOrders} from '../types/data';\n\nexport type TAppInitialState =  {\n  currentIngredient?: TIngredient;\n  currentOrder?: TOrders;\n}\n\nexport const initialState: TAppInitialState = {\n  currentIngredient: {} as TIngredient,   //объект текущего просматриваемого ингредиента\n  currentOrder: {} as TOrders\n};\n\nexport const appReducer = (state = initialState, action: TAppActions): TAppInitialState => {\n  switch (action.type) {\n    case ADD_MODAL_DATA: {\n      return {\n        currentIngredient: action.item,\n      };\n    }\n\n    case ADD_MODAL_PROFILE: {\n      return {\n        currentOrder: action.order,\n      };\n    }\n\n    case DELETE_MODAL_DATA: {\n      return {\n        ...initialState,\n        currentIngredient: {} as TIngredient,\n        currentOrder: {} as TOrders\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import { TBurgerConstructorActions } from \"../actions/burger-constructor\";\nimport {ADD_INGREDIENT_BURGERCONSTRUCTOR, DELETE_INGREDIENT_BURGERCONSTRUCTOR,\n  CHANGE_ORDER_BURGERCONSTRUCTOR, GET_ORDER_REQUEST, GET_ORDER_SUCCESS, GET_ORDER_FAILED, GET_ORDER_CLOSE}\n  from '../constants/burger-constructor';\nimport update from \"immutability-helper\";\nimport {TIngredient, TOrder} from '../types/data';\n\nexport type TBurgerConstructorState = {\n  ingredientsInBurgerConstructor: { bun: TIngredient[], other: TIngredient[] } \n  createdOrder: TOrder;\n  orderRequest: boolean;\n  orderFailed: boolean;\n}\n\nconst initialState: TBurgerConstructorState = {\n  ingredientsInBurgerConstructor: { bun: [], other: [] }, //список всех ингредиентов в текущем конструкторе бургера\n  createdOrder: {} as TOrder, //объект созданного заказа\n  orderRequest: false, // состояние во время вызова\n  orderFailed: false, // состояние при отказе\n};\n\nexport const constructorReducer = (state = initialState, action: TBurgerConstructorActions):\n TBurgerConstructorState => {\n  switch (action.type) {\n    case GET_ORDER_REQUEST: {\n      return {\n        ...state,\n        orderRequest: true,\n      };\n    }\n\n    case GET_ORDER_SUCCESS: {\n      return {\n        ...state,\n        orderRequest: false,\n        orderFailed: false,\n        createdOrder: action.createdOrder,\n      };\n    }\n\n    case GET_ORDER_FAILED: {\n      return {\n        ...initialState,\n        orderRequest: false,\n        orderFailed: true,\n      };\n    }\n\n    case GET_ORDER_CLOSE: {\n      return {\n        ...state,\n        orderRequest: false,\n        orderFailed: false,\n        createdOrder: {} as TOrder\n      };\n    }\n\n    case ADD_INGREDIENT_BURGERCONSTRUCTOR: {\n      return {\n        ...state,\n        ingredientsInBurgerConstructor:\n          action.item.type === \"bun\"\n            ? {\n                bun: [action.item],\n                other: [...state.ingredientsInBurgerConstructor.other],\n              }\n            : {\n                bun: [...state.ingredientsInBurgerConstructor.bun],\n                other: [\n                  ...state.ingredientsInBurgerConstructor.other,\n                  action.item,\n                ],\n              },\n      };\n    }\n\n    case CHANGE_ORDER_BURGERCONSTRUCTOR: {\n      const deleteElement = update(state.ingredientsInBurgerConstructor.other, {\n        $splice: [[action.dragIndex, 1]],\n      });\n      const newArrayConstructor = update(deleteElement, {\n        $splice: [\n          [\n            action.hoverIndex,\n            0,\n            state.ingredientsInBurgerConstructor.other[action.dragIndex],\n          ],\n        ],\n      });\n\n      return {\n        ...state,\n        ingredientsInBurgerConstructor: {\n          ...state.ingredientsInBurgerConstructor,\n          bun: [...state.ingredientsInBurgerConstructor.bun],\n          other: newArrayConstructor,\n        },\n      };\n    }\n\n    case DELETE_INGREDIENT_BURGERCONSTRUCTOR: {\n      return {\n        ...state,\n        ingredientsInBurgerConstructor: {\n          bun: [...state.ingredientsInBurgerConstructor.bun],\n          other: [\n            ...state.ingredientsInBurgerConstructor.other.filter(\n              (item: {_id: string}, index) => item._id + index !== action.id\n            ),\n          ],\n        },\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import {TForgotPasswordActions} from \"../actions/forgot-password\";\nimport {FORGOT_PASSWORD_REQUEST, FORGOT_PASSWORD_SUCCESS, FORGOT_PASSWORD_FAILED}\n  from '../constants/forgot-password';\n  import {TForgotPassword} from '../types/data';\n\nexport type TForgotPasswordState = {\n  forgotPassword: TForgotPassword; \n  forgotPasswordRequest: boolean;\n  forgotPasswordFailed: boolean;\n}\n\nconst initialState: TForgotPasswordState = {\n  forgotPassword: {} as TForgotPassword, //объект ответа от сервера\n  forgotPasswordRequest: false, // состояние во время вызова\n  forgotPasswordFailed: false, // состояние при отказе\n};\n\nexport const forgotPasswordReducer = (state = initialState, action: TForgotPasswordActions): TForgotPasswordState => {\n  switch (action.type) {\n    case FORGOT_PASSWORD_REQUEST: {\n      return {\n        ...state,\n        forgotPasswordRequest: true,\n      };\n    }\n\n    case FORGOT_PASSWORD_SUCCESS: {\n      return {\n        ...state,\n        forgotPasswordRequest: false,\n        forgotPasswordFailed: false,\n        forgotPassword: action.forgotPassword,\n      };\n    }\n\n    case FORGOT_PASSWORD_FAILED: {\n      return {\n        ...initialState,\n        forgotPasswordRequest: false,\n        forgotPasswordFailed: true,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import {TRecoveryPasswordActions} from \"../actions/recovery-password\";\nimport {RECOVERY_PASSWORD_REQUEST, RECOVERY_PASSWORD_SUCCESS, RECOVERY_PASSWORD_FAILED}\nfrom '../constants/recovery-password';\nimport {TForgotPassword} from '../types/data';\n\nexport type TRecoveryPassworState = {\n  recoveryPassword: TForgotPassword;\n  recoveryPasswordRequest: boolean;\n  recoveryPasswordFailed: boolean;\n}\n\nconst initialState: TRecoveryPassworState = {\n  recoveryPassword: {} as TForgotPassword, //объект ответа от сервера\n  recoveryPasswordRequest: false, // состояние во время вызова\n  recoveryPasswordFailed: false, // состояние при отказе\n};\n\nexport const recoveryPasswordReducer = (state = initialState, action: TRecoveryPasswordActions): TRecoveryPassworState => {\n  switch (action.type) {\n    case RECOVERY_PASSWORD_REQUEST: {\n      return {\n        ...state,\n        recoveryPasswordRequest: true,\n      };\n    }\n\n    case RECOVERY_PASSWORD_SUCCESS: {\n      return {\n        ...state,\n        recoveryPasswordRequest: false,\n        recoveryPasswordFailed: false,\n        recoveryPassword: action.recoveryPassword,\n      };\n    }\n\n    case RECOVERY_PASSWORD_FAILED: {\n      return {\n        ...initialState,\n        recoveryPasswordRequest: false,\n        recoveryPasswordFailed: true,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import {TRegisterActions} from \"../actions/register\";\nimport {REGISTER_REQUEST, REGISTER_SUCCESS, REGISTER_FAILED} from '../constants/register';\nimport {TAuth} from '../types/data';\n\nexport type TRegisterState = {\n  registerData: TAuth; \n  registerRequest: boolean;\n  registerFailed: boolean;\n}\n\nconst initialState: TRegisterState = {\n  registerData: {} as TAuth, //объект ответа от сервера\n  registerRequest: false, // состояние во время вызова\n  registerFailed: false, // состояние при отказе\n};\n\nexport const registerReducer = (state = initialState, action: TRegisterActions): TRegisterState => {\n  switch (action.type) {\n    case REGISTER_REQUEST: {\n      return {\n        ...state,\n        registerRequest: true,\n      };\n    }\n\n    case REGISTER_SUCCESS: {\n      return {\n        ...state,\n        registerRequest: false,\n        registerFailed: false,\n        registerData: action.registerData,\n      };\n    }\n\n    case REGISTER_FAILED: {\n      return {\n        ...initialState,\n        registerRequest: false,\n        registerFailed: true,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import { TLoginActions } from \"../actions/login\";\nimport {LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILED, LOGOUT_REQUEST, LOGOUT_SUCCESS, LOGOUT_FAILED, GET_USER_REQUEST, GET_USER_SUCCESS, GET_USER_FAILED} from '../constants/login';\nimport {TAuth, TUserData} from '../types/data';\n\nexport type TAuthInitialState = {\n  loginData: TAuth; \n  loginRequest: boolean;\n  loginFailed: boolean;\n\n  logoutData: {}; \n  logoutRequest: boolean;\n  logoutFailed: boolean;\n  login: boolean;\n\n  userData: TUserData; \n  userRequest: boolean;\n  userFailed: boolean;\n  status: {}; \n}\n\nconst initialState: TAuthInitialState = {\n  loginData: {} as TAuth, //объект ответа от сервера\n  loginRequest: false, // состояние во время вызова\n  loginFailed: false, // состояние при отказе\n\n  logoutData: {}, //объект ответа от сервера\n  logoutRequest: false, // состояние во время вызова\n  logoutFailed: false, // состояние при отказе\n  login: false,\n\n  userData: {} as TUserData,\n  userRequest: false, // состояние во время вызова\n  userFailed: false, // состояние при отказе\n  status: {},\n};\n\nexport const loginReducer = (state = initialState, action: TLoginActions): TAuthInitialState => {\n  switch (action.type) {\n    case LOGIN_REQUEST: {\n      return {\n        ...state,\n        loginRequest: true,\n      };\n    }\n\n    case LOGIN_SUCCESS: {\n      return {\n        ...state,\n        loginRequest: false,\n        loginFailed: false,\n        loginData: action.loginData,\n        login: true,\n      };\n    }\n\n    case LOGIN_FAILED: {\n      return {\n        ...initialState,\n        loginRequest: false,\n        loginFailed: true,\n        login: false,\n      };\n    }\n\n    case LOGOUT_REQUEST: {\n      return {\n        ...state,\n        logoutRequest: true,\n      };\n    }\n\n    case LOGOUT_SUCCESS: {\n      return {\n        ...state,\n        logoutRequest: false,\n        logoutFailed: false,\n        logoutData: action.logoutData,\n        login: false,\n      };\n    }\n\n    case LOGOUT_FAILED: {\n      return {\n        ...initialState,\n        logoutRequest: false,\n        logoutFailed: true,\n        login: true,\n      };\n    }\n\n    case GET_USER_REQUEST: {\n      return {\n        ...state,\n        userRequest: true,\n      };\n    }\n\n    case GET_USER_SUCCESS: {\n      return {\n        ...state,\n        userRequest: false,\n        userFailed: false,\n        userData: action.userData,\n        login: true,\n      };\n    }\n\n    case GET_USER_FAILED: {\n      return {\n        ...initialState,\n        userRequest: false,\n        userFailed: true,\n        status: action.status,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import {TUpdateUserActions} from \"../actions/update-user\";\nimport {UPDATE_USER_REQUEST, UPDATE_USER_SUCCESS, UPDATE_USER_FAILED}\nfrom '../constants/update-user';\nimport {TUserData} from '../types/data';\n\nexport type TUpdateUserState = {\n  updateUser: TUserData; \n  updateUserRequest: boolean;\n  updateUserFailed: boolean;\n  updatestatus: {},\n}\n\nconst initialState: TUpdateUserState = {\n  updateUser: {} as TUserData, //объект ответа от сервера\n  updateUserRequest: false, // состояние во время вызова\n  updateUserFailed: false, // состояние при отказе\n  updatestatus: {},\n};\n\nexport const updateUserReducer = (state = initialState, action: TUpdateUserActions): TUpdateUserState => {\n  switch (action.type) {\n    case UPDATE_USER_REQUEST: {\n      return {\n        ...state,\n        updateUserRequest: true,\n      };\n    }\n\n    case UPDATE_USER_SUCCESS: {\n      return {\n        ...state,\n        updateUserRequest: false,\n        updateUserFailed: false,\n        updateUser: action.updateUser,\n      };\n    }\n\n    case UPDATE_USER_FAILED: {\n      return {\n        ...initialState,\n        updateUserRequest: false,\n        updateUserFailed: true,\n        updatestatus: action.updatestatus,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import {TUpdateTokenActions} from \"../actions/update-token\";\nimport {UPDATE_TOKEN_REQUEST, UPDATE_TOKEN_SUCCESS, UPDATE_TOKEN_FAILED}\nfrom '../constants/update-token';\n\nexport type TUpdateTokenState = {\n  updateTokenData: {};\n  updateTokenRequest: boolean;\n  updateTokenFailed: boolean;\n  updateTokenSuccess: boolean;\n}\n\nconst initialState: TUpdateTokenState = {\n  updateTokenData: {}, //объект ответа от сервера\n  updateTokenRequest: false, // состояние во время вызова\n  updateTokenFailed: false, // состояние при отказе\n  updateTokenSuccess: false\n};\n\nexport const updateTokenReducer = (state = initialState, action: TUpdateTokenActions): TUpdateTokenState => {\n  switch (action.type) {\n    case UPDATE_TOKEN_REQUEST: {\n      return {\n        ...state,\n        updateTokenRequest: true,\n      };\n    }\n\n    case UPDATE_TOKEN_SUCCESS: {\n      return {\n        ...state,\n        updateTokenRequest: false,\n        updateTokenFailed: false,\n        updateTokenData: action.updateTokenData,\n        updateTokenSuccess: true\n      };\n    }\n\n    case UPDATE_TOKEN_FAILED: {\n      return {\n        ...initialState,\n        updateTokenRequest: false,\n        updateTokenFailed: true,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","export const GET_ORDERLIST_REQUEST: \"GET_ORDERLIST_REQUEST\" = \"GET_ORDERLIST_REQUEST\";\nexport const GET_ORDERLIST_SUCCESS: \"GET_ORDERLIST_SUCCESS\" = \"GET_ORDERLIST_SUCCESS\";\nexport const GET_ORDERLIST_FAILED: \"GET_ORDERLIST_FAILED\" = \"GET_ORDERLIST_FAILED\";","import {TGetOrderListActions} from \"../actions/order-list\";\nimport {GET_ORDERLIST_REQUEST, GET_ORDERLIST_SUCCESS, GET_ORDERLIST_FAILED}\n  from '../constants/order-list';\n  import {TOrderList} from '../types/data';\n\n  export type TOrderListState = {\n    orderList: TOrderList;\n    orderListRequest: boolean;\n    orderListFailed: boolean; \n  }\n\nconst initialState: TOrderListState = {\n    orderList: {} as TOrderList, //список всех полученных ингредиентов\n    orderListRequest: false, // состояние во время вызова\n    orderListFailed: false, // состояние при отказе\n};\n\nexport const orderListReducer = (state = initialState, action: TGetOrderListActions) => {\n    switch (action.type) {\n        case GET_ORDERLIST_REQUEST: {\n            return {\n                ...state,\n                orderListRequest: true,\n            };\n        }\n        case GET_ORDERLIST_SUCCESS: {\n            return {\n                ...state,\n                orderListRequest: false,\n                orderListFailed: false,\n                orderList: action.orderList,\n            };\n        }\n        case GET_ORDERLIST_FAILED: {\n            return {\n                ...state,\n                orderListFailed: true,\n            };\n        }\n        default: {\n            return state;\n          }\n    }\n}","import {TWSoketActions} from \"../actions/wsAction\";\nimport {\n    WS_CONNECTION_START_PROFILE,\n    WS_CONNECTION_SUCCESS,\n    WS_CONNECTION_ERROR,\n    WS_CONNECTION_CLOSED,\n    WS_GET_MESSAGE,\n    WS_SEND_MESSAGE,\n  } from '../constants/wsAction';\n  import {TMessage} from '../types/data';\n\n  export type TWsState = {\n    wsConnected: boolean;\n    messages: TMessage;\n    error?: Event;\n  }\n\nconst initialState = {\n    wsConnected: false,\n    messages: {} as TMessage\n  };\n  \n  export const wsReducer = (state = initialState, action: TWSoketActions): TWsState => {\n    switch (action.type) {\n        case WS_CONNECTION_SUCCESS: {\n            return {\n              ...state,\n              error: undefined,\n              wsConnected: true,\n            }\n        }\n\n        case WS_CONNECTION_START_PROFILE: {\n            return {\n                ...state,\n                error: undefined,\n                wsConnected: true,\n              }\n        }\n\n        case WS_CONNECTION_ERROR: {\n            return {\n            ...state,\n            wsConnected: false,\n            }\n        }\n\n        case WS_CONNECTION_CLOSED: {\n            return {\n              ...state,\n              error: undefined,\n              wsConnected: false,\n            }\n        }\n\n        case WS_GET_MESSAGE: {\n            return {\n              ...state,\n              messages: action.payload\n            }\n        }\n\n        case WS_SEND_MESSAGE: {\n            return {\n              ...state,\n              messages: {} as TMessage\n            }\n        }   \n\n        default: {\n            return state;\n        }\n    }}","import { combineReducers } from 'redux';\nimport { ingredientsReducer } from './burger-ingredients';\nimport { appReducer } from './app';\nimport { constructorReducer } from './burger-constructor';\nimport { forgotPasswordReducer } from './forgot-password';\nimport { recoveryPasswordReducer } from './recovery-password';\nimport { registerReducer } from './register';\nimport { loginReducer } from './auth';\nimport { updateUserReducer } from './update-user';\nimport { updateTokenReducer } from './update-token';\nimport { orderListReducer } from './order-list';\nimport { wsReducer } from './wsReducer';\n\n//хранилище\nexport const rootReducer = combineReducers({\n    ingredientsReducer,\n    appReducer,\n    constructorReducer,\n    forgotPasswordReducer,\n    recoveryPasswordReducer,\n    registerReducer,\n    loginReducer,\n    updateUserReducer,\n    updateTokenReducer,\n    orderListReducer,\n    wsReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport reportWebVitals from './reportWebVitals';\nimport './fonts/fonts.css';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { rootReducer } from './services/reducers/index';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { BrowserRouter } from 'react-router-dom';\nimport { socketMiddleware } from '../src/services/middleware/socketMiddleware';\nimport {\n  WS_CONNECTION_START,\n  WS_CONNECTION_SUCCESS,\n  WS_CONNECTION_ERROR,\n  WS_CONNECTION_CLOSED,\n  WS_GET_MESSAGE,\n  WS_CONNECTION_START_PROFILE,\n} from '../src/services/constants/wsAction';\n\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst wsUrl = 'wss://norma.nomoreparties.space/orders';\n\nconst wsActions = {\n  wsInit: WS_CONNECTION_START,\n  wsInitProfile: WS_CONNECTION_START_PROFILE,\n  onOpen: WS_CONNECTION_SUCCESS,\n  onClose: WS_CONNECTION_CLOSED,\n  onError: WS_CONNECTION_ERROR,\n  onMessage: WS_GET_MESSAGE\n};\n\nexport const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const enhancer = composeEnhancers(applyMiddleware(thunk,socketMiddleware(wsUrl, wsActions)));\n\nexport const store = createStore(rootReducer, enhancer); \n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"burger-constructor_block__1faIL\",\"list\":\"burger-constructor_list__2lXaw\",\"item\":\"burger-constructor_item__9YfeG\",\"bun\":\"burger-constructor_bun__12nX_\",\"total\":\"burger-constructor_total__2z4fk\",\"sum\":\"burger-constructor_sum__487I2\",\"container\":\"burger-constructor_container__332QY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ingredient-details_description__1Lsj6\",\"stat\":\"ingredient-details_stat__raaV-\",\"list\":\"ingredient-details_list__2aOfA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"statusOrder_container__257Mm\",\"readiness\":\"statusOrder_readiness__3Him3\",\"statusBlock\":\"statusOrder_statusBlock__mW6_s\",\"statusList\":\"statusOrder_statusList__2HWLD\",\"idReady\":\"statusOrder_idReady__3KWNH\",\"idWork\":\"statusOrder_idWork__2HqWk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"burger-ingredients_block__4JbQ5\",\"nav\":\"burger-ingredients_nav__ICNB4\",\"item\":\"burger-ingredients_item__3x5fV\",\"mainMenu\":\"burger-ingredients_mainMenu__6oCG9\",\"tab\":\"burger-ingredients_tab__1Ru1Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"product-item_card__3f30t\",\"image\":\"product-item_image__3O8nZ\",\"price\":\"product-item_price__1ArbP\",\"name\":\"product-item_name__VUo2_\",\"count\":\"product-item_count__3nL_M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"auth-form_container__m7eNv\",\"form\":\"auth-form_form__1d4QB\",\"footer\":\"auth-form_footer__1QPcI\",\"footerLink\":\"auth-form_footerLink__3QtqB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"modal_popup__lnicy\",\"close\":\"modal_close__1Iez6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"listOrder_block__3UsEF\",\"container\":\"listOrder_container__2jt9s\",\"title\":\"listOrder_title__1IPX-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"app_page__xu4mx\",\"menu\":\"app_menu__2-T9n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"order-details_container__1PXDt\",\"done\":\"order-details_done__1ZCH5\"};"],"sourceRoot":""}